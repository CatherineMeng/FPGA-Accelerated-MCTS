// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="top_top,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu200-fsgd2104-2-e,HLS_INPUT_CLOCK=3.333000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.433090,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=4319,HLS_SYN_LUT=5782,HLS_VERSION=2021_2}" *)

module top (
        ap_local_block,
        ap_clk,
        ap_rst_n,
        event_done,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        X_TDATA,
        X_TVALID,
        X_TREADY,
        X_TKEEP,
        X_TLAST,
        ids_TDATA,
        ids_TVALID,
        ids_TREADY,
        ids_TKEEP,
        ids_TLAST,
        out_r_TDATA,
        out_r_TVALID,
        out_r_TREADY,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt,
        event_start,
        stall_start_ext,
        stall_done_ext,
        stall_start_str,
        stall_done_str,
        stall_start_int,
        stall_done_int
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_state3 = 16'd4;
parameter    ap_ST_fsm_state4 = 16'd8;
parameter    ap_ST_fsm_state5 = 16'd16;
parameter    ap_ST_fsm_state6 = 16'd32;
parameter    ap_ST_fsm_state7 = 16'd64;
parameter    ap_ST_fsm_state8 = 16'd128;
parameter    ap_ST_fsm_state9 = 16'd256;
parameter    ap_ST_fsm_state10 = 16'd512;
parameter    ap_ST_fsm_state11 = 16'd1024;
parameter    ap_ST_fsm_state12 = 16'd2048;
parameter    ap_ST_fsm_state13 = 16'd4096;
parameter    ap_ST_fsm_state14 = 16'd8192;
parameter    ap_ST_fsm_state15 = 16'd16384;
parameter    ap_ST_fsm_state16 = 16'd32768;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM0_DATA_WIDTH = 256;
parameter    C_M_AXI_GMEM0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_USER_VALUE = 0;
parameter    C_M_AXI_GMEM0_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM0_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM0_WSTRB_WIDTH = (256 / 8);

output   ap_local_block;
input   ap_clk;
input   ap_rst_n;
output   event_done;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_AWADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_AWID;
output  [7:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [C_M_AXI_GMEM0_AWUSER_WIDTH - 1:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_WDATA;
output  [C_M_AXI_GMEM0_WSTRB_WIDTH - 1:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_WID;
output  [C_M_AXI_GMEM0_WUSER_WIDTH - 1:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_ARADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_ARID;
output  [7:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [C_M_AXI_GMEM0_ARUSER_WIDTH - 1:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_RID;
input  [C_M_AXI_GMEM0_RUSER_WIDTH - 1:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_BID;
input  [C_M_AXI_GMEM0_BUSER_WIDTH - 1:0] m_axi_gmem0_BUSER;
input  [23:0] X_TDATA;
input   X_TVALID;
output   X_TREADY;
input  [2:0] X_TKEEP;
input  [0:0] X_TLAST;
input  [31:0] ids_TDATA;
input   ids_TVALID;
output   ids_TREADY;
input  [3:0] ids_TKEEP;
input  [0:0] ids_TLAST;
output  [127:0] out_r_TDATA;
output   out_r_TVALID;
input   out_r_TREADY;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;
output   event_start;
output   stall_start_ext;
output   stall_done_ext;
output   stall_start_str;
output   stall_done_str;
output   stall_start_int;
output   stall_done_int;

reg stall_start_ext;
reg stall_done_ext;
reg stall_start_str;
reg stall_done_str;
reg stall_start_int;
reg stall_done_int;

wire   [0:0] ap_local_deadlock;
(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
wire    ap_continue;
reg    ap_done_reg;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] adj_list;
wire   [31:0] flushs;
reg   [19:0] root_numv_0;
reg   [19:0] root_numv_1;
reg   [19:0] root_numv_2;
reg    X_TDATA_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_nbreadreq_fu_230_p5;
reg    ids_TDATA_blk_n;
wire   [11:0] trunc_ln740_fu_364_p1;
reg   [11:0] trunc_ln740_reg_535;
reg   [31:0] tmp_data_V_reg_540;
reg   [19:0] root_numv_0_load_1_reg_548;
reg   [19:0] root_numv_1_load_1_reg_553;
reg   [19:0] root_numv_2_load_1_reg_558;
wire    grp_top_Pipeline_Loop_children_fu_295_ap_start;
wire    grp_top_Pipeline_Loop_children_fu_295_ap_done;
wire    grp_top_Pipeline_Loop_children_fu_295_ap_idle;
wire    grp_top_Pipeline_Loop_children_fu_295_ap_ready;
wire   [2:0] grp_top_Pipeline_Loop_children_fu_295_max_child_out;
wire    grp_top_Pipeline_Loop_children_fu_295_max_child_out_ap_vld;
wire    grp_top_Pipeline_Loop_children_fu_295_ap_ext_blocking_n;
wire    grp_top_Pipeline_Loop_children_fu_295_ap_str_blocking_n;
wire    grp_top_Pipeline_Loop_children_fu_295_ap_int_blocking_n;
wire    grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_start;
wire    grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_done;
wire    grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_idle;
wire    grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_ready;
wire    grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_xbarpipe_read;
wire    grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_xbarIDRpipe_read;
wire   [51:0] grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe1_din;
wire    grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe1_write;
wire   [51:0] grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe2_din;
wire    grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe2_write;
wire   [51:0] grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe3_din;
wire    grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe3_write;
wire    grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_ext_blocking_n;
wire    grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_str_blocking_n;
wire    grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_int_blocking_n;
wire    grp_subT1_pipl_fu_312_ap_start;
wire    grp_subT1_pipl_fu_312_ap_done;
wire    grp_subT1_pipl_fu_312_ap_idle;
wire    grp_subT1_pipl_fu_312_ap_ready;
reg   [51:0] grp_subT1_pipl_fu_312_IDRpipe1_dout;
reg    grp_subT1_pipl_fu_312_IDRpipe1_empty_n;
wire    grp_subT1_pipl_fu_312_IDRpipe1_read;
reg   [0:0] grp_subT1_pipl_fu_312_Wsigpipe1161_dout;
reg    grp_subT1_pipl_fu_312_Wsigpipe1161_empty_n;
wire    grp_subT1_pipl_fu_312_Wsigpipe1161_read;
wire   [127:0] grp_subT1_pipl_fu_312_OutTuppipe1_din;
reg    grp_subT1_pipl_fu_312_OutTuppipe1_full_n;
wire    grp_subT1_pipl_fu_312_OutTuppipe1_write;
wire    grp_subT1_pipl_fu_312_ap_ext_blocking_n;
wire    grp_subT1_pipl_fu_312_ap_str_blocking_n;
wire    grp_subT1_pipl_fu_312_ap_int_blocking_n;
wire    grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_start;
wire    grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_done;
wire    grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_idle;
wire    grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_ready;
wire    grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_out_r_TREADY;
wire    grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_OutTuppipe1_read;
wire    grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_OutTuppipe3_read;
wire    grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_OutTuppipe2_read;
wire   [127:0] grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_out_r_TDATA;
wire    grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_out_r_TVALID;
wire    grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_ext_blocking_n;
wire    grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_str_blocking_n;
wire    grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_int_blocking_n;
reg    grp_top_Pipeline_Loop_children_fu_295_ap_start_reg;
reg    ap_block_state2;
reg    ap_block_state2_ignore_call3;
wire    ap_CS_fsm_state3;
reg   [2:0] max_child_loc_fu_182;
reg    grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_start_reg;
wire    ap_CS_fsm_state5;
wire   [51:0] xbarIDRpipe_dout;
wire    xbarIDRpipe_empty_n;
reg    xbarIDRpipe_read;
wire    ap_CS_fsm_state6;
wire    IDRpipe1_full_n;
reg    IDRpipe1_write;
wire   [2:0] xbarpipe_dout;
wire    xbarpipe_empty_n;
reg    xbarpipe_read;
wire    IDRpipe2_full_n;
reg    IDRpipe2_write;
wire    IDRpipe3_full_n;
reg    IDRpipe3_write;
reg    grp_subT1_pipl_fu_312_ap_start_reg;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state12;
wire   [51:0] IDRpipe1_dout;
wire    IDRpipe1_empty_n;
reg    IDRpipe1_read;
wire    ap_CS_fsm_state9;
wire   [51:0] IDRpipe2_dout;
wire    IDRpipe2_empty_n;
reg    IDRpipe2_read;
wire    ap_CS_fsm_state11;
wire   [51:0] IDRpipe3_dout;
wire    IDRpipe3_empty_n;
reg    IDRpipe3_read;
wire    ap_CS_fsm_state13;
wire   [0:0] Wsigpipe1_dout;
wire    Wsigpipe1_empty_n;
reg    Wsigpipe1_read;
wire   [0:0] Wsigpipe2_dout;
wire    Wsigpipe2_empty_n;
reg    Wsigpipe2_read;
wire   [0:0] Wsigpipe3_dout;
wire    Wsigpipe3_empty_n;
reg    Wsigpipe3_read;
wire    OutTuppipe1_full_n;
reg    OutTuppipe1_write;
wire    OutTuppipe2_full_n;
reg    OutTuppipe2_write;
wire    OutTuppipe3_full_n;
reg    OutTuppipe3_write;
reg    grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_start_reg;
wire    ap_CS_fsm_state14;
wire   [127:0] OutTuppipe1_dout;
wire    OutTuppipe1_empty_n;
reg    OutTuppipe1_read;
wire    ap_CS_fsm_state15;
wire   [127:0] OutTuppipe3_dout;
wire    OutTuppipe3_empty_n;
reg    OutTuppipe3_read;
wire   [127:0] OutTuppipe2_dout;
wire    OutTuppipe2_empty_n;
reg    OutTuppipe2_read;
wire   [19:0] add_ln712_fu_408_p2;
wire   [1:0] trunc_ln712_fu_380_p1;
reg   [19:0] ap_sig_allocacmp_root_numv_0_load_1;
reg   [19:0] ap_sig_allocacmp_root_numv_1_load_1;
reg   [19:0] ap_sig_allocacmp_root_numv_2_load_1;
wire    ap_CS_fsm_state4;
wire    xbarpipe_full_n;
reg    xbarpipe_write;
wire   [51:0] xbarIDRpipe_din;
wire    xbarIDRpipe_full_n;
reg    xbarIDRpipe_write;
reg    ap_block_state4;
wire    Wsigpipe1_full_n;
reg    Wsigpipe1_write;
wire    ap_CS_fsm_state7;
wire    Wsigpipe2_full_n;
reg    Wsigpipe2_write;
wire    Wsigpipe3_full_n;
reg    Wsigpipe3_write;
reg    ap_block_state7;
wire   [1:0] tmp_s_fu_396_p4;
wire   [19:0] tmp_s_fu_396_p5;
wire   [19:0] V_V_fu_368_p3;
wire    ap_CS_fsm_state16;
wire    regslice_both_out_r_U_apdone_blk;
reg   [15:0] ap_NS_fsm;
reg    ap_block_state1;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
reg    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
reg    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
wire    ap_str_blocking_cur_n;
reg    ap_ext_blocking_sub_n;
reg    ap_wait_0;
reg    ap_sub_ext_blocking_0;
reg    ap_wait_1;
reg    ap_sub_ext_blocking_1;
reg    ap_wait_2;
reg    ap_sub_ext_blocking_2;
reg    ap_wait_3;
reg    ap_sub_ext_blocking_3;
reg    ap_str_blocking_sub_n;
reg    ap_sub_str_blocking_0;
reg    ap_sub_str_blocking_1;
reg    ap_sub_str_blocking_2;
reg    ap_sub_str_blocking_3;
reg    ap_int_blocking_sub_n;
reg    ap_sub_int_blocking_0;
reg    ap_sub_int_blocking_1;
reg    ap_sub_int_blocking_2;
reg    ap_sub_int_blocking_3;
wire    ap_ext_blocking_n;
wire    ap_str_blocking_n;
wire    ap_int_blocking_n;
reg    ap_ext_blocking_n_reg;
reg    ap_str_blocking_n_reg;
reg    ap_int_blocking_n_reg;
wire    regslice_both_X_V_data_V_U_apdone_blk;
wire   [23:0] X_TDATA_int_regslice;
wire    X_TVALID_int_regslice;
reg    X_TREADY_int_regslice;
wire    regslice_both_X_V_data_V_U_ack_in;
wire    regslice_both_X_V_keep_V_U_apdone_blk;
wire   [2:0] X_TKEEP_int_regslice;
wire    regslice_both_X_V_keep_V_U_vld_out;
wire    regslice_both_X_V_keep_V_U_ack_in;
wire    regslice_both_X_V_last_V_U_apdone_blk;
wire   [0:0] X_TLAST_int_regslice;
wire    regslice_both_X_V_last_V_U_vld_out;
wire    regslice_both_X_V_last_V_U_ack_in;
wire    regslice_both_ids_V_data_V_U_apdone_blk;
wire   [31:0] ids_TDATA_int_regslice;
wire    ids_TVALID_int_regslice;
reg    ids_TREADY_int_regslice;
wire    regslice_both_ids_V_data_V_U_ack_in;
wire    regslice_both_ids_V_keep_V_U_apdone_blk;
wire   [3:0] ids_TKEEP_int_regslice;
wire    regslice_both_ids_V_keep_V_U_vld_out;
wire    regslice_both_ids_V_keep_V_U_ack_in;
wire    regslice_both_ids_V_last_V_U_apdone_blk;
wire   [0:0] ids_TLAST_int_regslice;
wire    regslice_both_ids_V_last_V_U_vld_out;
wire    regslice_both_ids_V_last_V_U_ack_in;
wire    out_r_TREADY_int_regslice;
wire    regslice_both_out_r_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 16'd1;
#0 root_numv_0 = 20'd0;
#0 root_numv_1 = 20'd0;
#0 root_numv_2 = 20'd0;
#0 grp_top_Pipeline_Loop_children_fu_295_ap_start_reg = 1'b0;
#0 grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_start_reg = 1'b0;
#0 grp_subT1_pipl_fu_312_ap_start_reg = 1'b0;
#0 grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_start_reg = 1'b0;
end

top_top_Pipeline_Loop_children grp_top_Pipeline_Loop_children_fu_295(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_top_Pipeline_Loop_children_fu_295_ap_start),
    .ap_done(grp_top_Pipeline_Loop_children_fu_295_ap_done),
    .ap_idle(grp_top_Pipeline_Loop_children_fu_295_ap_idle),
    .ap_ready(grp_top_Pipeline_Loop_children_fu_295_ap_ready),
    .root_numv_0_load_1(root_numv_0_load_1_reg_548),
    .root_numv_1_load_1(root_numv_1_load_1_reg_553),
    .root_numv_2_load_1(root_numv_2_load_1_reg_558),
    .max_child_out(grp_top_Pipeline_Loop_children_fu_295_max_child_out),
    .max_child_out_ap_vld(grp_top_Pipeline_Loop_children_fu_295_max_child_out_ap_vld),
    .ap_ext_blocking_n(grp_top_Pipeline_Loop_children_fu_295_ap_ext_blocking_n),
    .ap_str_blocking_n(grp_top_Pipeline_Loop_children_fu_295_ap_str_blocking_n),
    .ap_int_blocking_n(grp_top_Pipeline_Loop_children_fu_295_ap_int_blocking_n)
);

top_top_Pipeline_VITIS_LOOP_154_1 grp_top_Pipeline_VITIS_LOOP_154_1_fu_303(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_start),
    .ap_done(grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_done),
    .ap_idle(grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_idle),
    .ap_ready(grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_ready),
    .xbarpipe_dout(xbarpipe_dout),
    .xbarpipe_empty_n(xbarpipe_empty_n),
    .xbarpipe_read(grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_xbarpipe_read),
    .xbarIDRpipe_dout(xbarIDRpipe_dout),
    .xbarIDRpipe_empty_n(xbarIDRpipe_empty_n),
    .xbarIDRpipe_read(grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_xbarIDRpipe_read),
    .IDRpipe1_din(grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe1_din),
    .IDRpipe1_full_n(IDRpipe1_full_n),
    .IDRpipe1_write(grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe1_write),
    .IDRpipe2_din(grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe2_din),
    .IDRpipe2_full_n(IDRpipe2_full_n),
    .IDRpipe2_write(grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe2_write),
    .IDRpipe3_din(grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe3_din),
    .IDRpipe3_full_n(IDRpipe3_full_n),
    .IDRpipe3_write(grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe3_write),
    .ap_ext_blocking_n(grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_ext_blocking_n),
    .ap_str_blocking_n(grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_str_blocking_n),
    .ap_int_blocking_n(grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_int_blocking_n)
);

top_subT1_pipl grp_subT1_pipl_fu_312(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_subT1_pipl_fu_312_ap_start),
    .ap_done(grp_subT1_pipl_fu_312_ap_done),
    .ap_idle(grp_subT1_pipl_fu_312_ap_idle),
    .ap_ready(grp_subT1_pipl_fu_312_ap_ready),
    .IDRpipe1_dout(grp_subT1_pipl_fu_312_IDRpipe1_dout),
    .IDRpipe1_empty_n(grp_subT1_pipl_fu_312_IDRpipe1_empty_n),
    .IDRpipe1_read(grp_subT1_pipl_fu_312_IDRpipe1_read),
    .Wsigpipe1161_dout(grp_subT1_pipl_fu_312_Wsigpipe1161_dout),
    .Wsigpipe1161_empty_n(grp_subT1_pipl_fu_312_Wsigpipe1161_empty_n),
    .Wsigpipe1161_read(grp_subT1_pipl_fu_312_Wsigpipe1161_read),
    .OutTuppipe1_din(grp_subT1_pipl_fu_312_OutTuppipe1_din),
    .OutTuppipe1_full_n(grp_subT1_pipl_fu_312_OutTuppipe1_full_n),
    .OutTuppipe1_write(grp_subT1_pipl_fu_312_OutTuppipe1_write),
    .ap_ext_blocking_n(grp_subT1_pipl_fu_312_ap_ext_blocking_n),
    .ap_str_blocking_n(grp_subT1_pipl_fu_312_ap_str_blocking_n),
    .ap_int_blocking_n(grp_subT1_pipl_fu_312_ap_int_blocking_n)
);

top_top_Pipeline_VITIS_LOOP_199_1 grp_top_Pipeline_VITIS_LOOP_199_1_fu_351(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_start),
    .ap_done(grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_done),
    .ap_idle(grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_idle),
    .ap_ready(grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_ready),
    .out_r_TREADY(grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_out_r_TREADY),
    .OutTuppipe1_dout(OutTuppipe1_dout),
    .OutTuppipe1_empty_n(OutTuppipe1_empty_n),
    .OutTuppipe1_read(grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_OutTuppipe1_read),
    .OutTuppipe3_dout(OutTuppipe3_dout),
    .OutTuppipe3_empty_n(OutTuppipe3_empty_n),
    .OutTuppipe3_read(grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_OutTuppipe3_read),
    .OutTuppipe2_dout(OutTuppipe2_dout),
    .OutTuppipe2_empty_n(OutTuppipe2_empty_n),
    .OutTuppipe2_read(grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_OutTuppipe2_read),
    .out_r_TDATA(grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_out_r_TDATA),
    .out_r_TVALID(grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_out_r_TVALID),
    .ap_ext_blocking_n(grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_ext_blocking_n),
    .ap_str_blocking_n(grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_str_blocking_n),
    .ap_int_blocking_n(grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_int_blocking_n)
);

top_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .adj_list(adj_list),
    .flushs(flushs),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .event_start(event_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_continue(ap_continue),
    .ap_idle(ap_idle),
    .ap_local_deadlock(ap_local_deadlock)
);

top_mux_32_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 20 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 20 ))
mux_32_20_1_1_U88(
    .din0(root_numv_0),
    .din1(root_numv_1),
    .din2(root_numv_2),
    .din3(tmp_s_fu_396_p4),
    .dout(tmp_s_fu_396_p5)
);

top_fifo_w3_d1_S xbarpipe_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(max_child_loc_fu_182),
    .if_full_n(xbarpipe_full_n),
    .if_write(xbarpipe_write),
    .if_dout(xbarpipe_dout),
    .if_empty_n(xbarpipe_empty_n),
    .if_read(xbarpipe_read)
);

top_fifo_w52_d1_S xbarIDRpipe_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(xbarIDRpipe_din),
    .if_full_n(xbarIDRpipe_full_n),
    .if_write(xbarIDRpipe_write),
    .if_dout(xbarIDRpipe_dout),
    .if_empty_n(xbarIDRpipe_empty_n),
    .if_read(xbarIDRpipe_read)
);

top_fifo_w52_d32_S IDRpipe1_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe1_din),
    .if_full_n(IDRpipe1_full_n),
    .if_write(IDRpipe1_write),
    .if_dout(IDRpipe1_dout),
    .if_empty_n(IDRpipe1_empty_n),
    .if_read(IDRpipe1_read)
);

top_fifo_w52_d32_S IDRpipe2_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe2_din),
    .if_full_n(IDRpipe2_full_n),
    .if_write(IDRpipe2_write),
    .if_dout(IDRpipe2_dout),
    .if_empty_n(IDRpipe2_empty_n),
    .if_read(IDRpipe2_read)
);

top_fifo_w52_d32_S IDRpipe3_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe3_din),
    .if_full_n(IDRpipe3_full_n),
    .if_write(IDRpipe3_write),
    .if_dout(IDRpipe3_dout),
    .if_empty_n(IDRpipe3_empty_n),
    .if_read(IDRpipe3_read)
);

top_fifo_w1_d1_S_x Wsigpipe1_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(1'd1),
    .if_full_n(Wsigpipe1_full_n),
    .if_write(Wsigpipe1_write),
    .if_dout(Wsigpipe1_dout),
    .if_empty_n(Wsigpipe1_empty_n),
    .if_read(Wsigpipe1_read)
);

top_fifo_w1_d1_S_x Wsigpipe2_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(1'd1),
    .if_full_n(Wsigpipe2_full_n),
    .if_write(Wsigpipe2_write),
    .if_dout(Wsigpipe2_dout),
    .if_empty_n(Wsigpipe2_empty_n),
    .if_read(Wsigpipe2_read)
);

top_fifo_w1_d1_S_x Wsigpipe3_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(1'd1),
    .if_full_n(Wsigpipe3_full_n),
    .if_write(Wsigpipe3_write),
    .if_dout(Wsigpipe3_dout),
    .if_empty_n(Wsigpipe3_empty_n),
    .if_read(Wsigpipe3_read)
);

top_fifo_w128_d32_S OutTuppipe1_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_subT1_pipl_fu_312_OutTuppipe1_din),
    .if_full_n(OutTuppipe1_full_n),
    .if_write(OutTuppipe1_write),
    .if_dout(OutTuppipe1_dout),
    .if_empty_n(OutTuppipe1_empty_n),
    .if_read(OutTuppipe1_read)
);

top_fifo_w128_d32_S OutTuppipe2_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_subT1_pipl_fu_312_OutTuppipe1_din),
    .if_full_n(OutTuppipe2_full_n),
    .if_write(OutTuppipe2_write),
    .if_dout(OutTuppipe2_dout),
    .if_empty_n(OutTuppipe2_empty_n),
    .if_read(OutTuppipe2_read)
);

top_fifo_w128_d32_S OutTuppipe3_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_subT1_pipl_fu_312_OutTuppipe1_din),
    .if_full_n(OutTuppipe3_full_n),
    .if_write(OutTuppipe3_write),
    .if_dout(OutTuppipe3_dout),
    .if_empty_n(OutTuppipe3_empty_n),
    .if_read(OutTuppipe3_read)
);

top_regslice_both #(
    .DataWidth( 24 ))
regslice_both_X_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(X_TDATA),
    .vld_in(X_TVALID),
    .ack_in(regslice_both_X_V_data_V_U_ack_in),
    .data_out(X_TDATA_int_regslice),
    .vld_out(X_TVALID_int_regslice),
    .ack_out(X_TREADY_int_regslice),
    .apdone_blk(regslice_both_X_V_data_V_U_apdone_blk)
);

top_regslice_both #(
    .DataWidth( 3 ))
regslice_both_X_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(X_TKEEP),
    .vld_in(X_TVALID),
    .ack_in(regslice_both_X_V_keep_V_U_ack_in),
    .data_out(X_TKEEP_int_regslice),
    .vld_out(regslice_both_X_V_keep_V_U_vld_out),
    .ack_out(X_TREADY_int_regslice),
    .apdone_blk(regslice_both_X_V_keep_V_U_apdone_blk)
);

top_regslice_both #(
    .DataWidth( 1 ))
regslice_both_X_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(X_TLAST),
    .vld_in(X_TVALID),
    .ack_in(regslice_both_X_V_last_V_U_ack_in),
    .data_out(X_TLAST_int_regslice),
    .vld_out(regslice_both_X_V_last_V_U_vld_out),
    .ack_out(X_TREADY_int_regslice),
    .apdone_blk(regslice_both_X_V_last_V_U_apdone_blk)
);

top_regslice_both #(
    .DataWidth( 32 ))
regslice_both_ids_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(ids_TDATA),
    .vld_in(ids_TVALID),
    .ack_in(regslice_both_ids_V_data_V_U_ack_in),
    .data_out(ids_TDATA_int_regslice),
    .vld_out(ids_TVALID_int_regslice),
    .ack_out(ids_TREADY_int_regslice),
    .apdone_blk(regslice_both_ids_V_data_V_U_apdone_blk)
);

top_regslice_both #(
    .DataWidth( 4 ))
regslice_both_ids_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(ids_TKEEP),
    .vld_in(ids_TVALID),
    .ack_in(regslice_both_ids_V_keep_V_U_ack_in),
    .data_out(ids_TKEEP_int_regslice),
    .vld_out(regslice_both_ids_V_keep_V_U_vld_out),
    .ack_out(ids_TREADY_int_regslice),
    .apdone_blk(regslice_both_ids_V_keep_V_U_apdone_blk)
);

top_regslice_both #(
    .DataWidth( 1 ))
regslice_both_ids_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(ids_TLAST),
    .vld_in(ids_TVALID),
    .ack_in(regslice_both_ids_V_last_V_U_ack_in),
    .data_out(ids_TLAST_int_regslice),
    .vld_out(regslice_both_ids_V_last_V_U_vld_out),
    .ack_out(ids_TREADY_int_regslice),
    .apdone_blk(regslice_both_ids_V_last_V_U_apdone_blk)
);

top_regslice_both #(
    .DataWidth( 128 ))
regslice_both_out_r_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_out_r_TDATA),
    .vld_in(grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_out_r_TVALID),
    .ack_in(out_r_TREADY_int_regslice),
    .data_out(out_r_TDATA),
    .vld_out(regslice_both_out_r_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((regslice_both_out_r_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state16))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_subT1_pipl_fu_312_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8))) begin
            grp_subT1_pipl_fu_312_ap_start_reg <= 1'b1;
        end else if ((grp_subT1_pipl_fu_312_ap_ready == 1'b1)) begin
            grp_subT1_pipl_fu_312_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_top_Pipeline_Loop_children_fu_295_ap_start_reg <= 1'b0;
    end else begin
        if ((~(((ids_TVALID_int_regslice == 1'b0) & (tmp_nbreadreq_fu_230_p5 == 1'd1)) | ((1'b0 == X_TVALID_int_regslice) & (tmp_nbreadreq_fu_230_p5 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (tmp_nbreadreq_fu_230_p5 == 1'd1))) begin
            grp_top_Pipeline_Loop_children_fu_295_ap_start_reg <= 1'b1;
        end else if ((grp_top_Pipeline_Loop_children_fu_295_ap_ready == 1'b1)) begin
            grp_top_Pipeline_Loop_children_fu_295_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_start_reg <= 1'b1;
        end else if ((grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_ready == 1'b1)) begin
            grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state14)) begin
            grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_start_reg <= 1'b1;
        end else if ((grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_ready == 1'b1)) begin
            grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_ext_blocking_n_reg <= ap_ext_blocking_n;
end

always @ (posedge ap_clk) begin
    ap_int_blocking_n_reg <= ap_int_blocking_n;
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    ap_str_blocking_n_reg <= ap_str_blocking_n;
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_top_Pipeline_Loop_children_fu_295_max_child_out_ap_vld == 1'b1))) begin
        max_child_loc_fu_182 <= grp_top_Pipeline_Loop_children_fu_295_max_child_out;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ids_TVALID_int_regslice == 1'b0) & (tmp_nbreadreq_fu_230_p5 == 1'd1)) | ((1'b0 == X_TVALID_int_regslice) & (tmp_nbreadreq_fu_230_p5 == 1'd1))) & (trunc_ln712_fu_380_p1 == 2'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_nbreadreq_fu_230_p5 == 1'd1))) begin
        root_numv_0 <= add_ln712_fu_408_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_nbreadreq_fu_230_p5 == 1'd1))) begin
        root_numv_0_load_1_reg_548 <= ap_sig_allocacmp_root_numv_0_load_1;
        root_numv_1_load_1_reg_553 <= ap_sig_allocacmp_root_numv_1_load_1;
        root_numv_2_load_1_reg_558 <= ap_sig_allocacmp_root_numv_2_load_1;
        tmp_data_V_reg_540 <= ids_TDATA_int_regslice;
        trunc_ln740_reg_535 <= trunc_ln740_fu_364_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ids_TVALID_int_regslice == 1'b0) & (tmp_nbreadreq_fu_230_p5 == 1'd1)) | ((1'b0 == X_TVALID_int_regslice) & (tmp_nbreadreq_fu_230_p5 == 1'd1))) & (trunc_ln712_fu_380_p1 == 2'd1) & (1'b1 == ap_CS_fsm_state2) & (tmp_nbreadreq_fu_230_p5 == 1'd1))) begin
        root_numv_1 <= add_ln712_fu_408_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ids_TVALID_int_regslice == 1'b0) & (tmp_nbreadreq_fu_230_p5 == 1'd1)) | ((1'b0 == X_TVALID_int_regslice) & (tmp_nbreadreq_fu_230_p5 == 1'd1))) & ~(trunc_ln712_fu_380_p1 == 2'd1) & ~(trunc_ln712_fu_380_p1 == 2'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_nbreadreq_fu_230_p5 == 1'd1))) begin
        root_numv_2 <= add_ln712_fu_408_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        IDRpipe1_read = grp_subT1_pipl_fu_312_IDRpipe1_read;
    end else begin
        IDRpipe1_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        IDRpipe1_write = grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe1_write;
    end else begin
        IDRpipe1_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        IDRpipe2_read = grp_subT1_pipl_fu_312_IDRpipe1_read;
    end else begin
        IDRpipe2_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        IDRpipe2_write = grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe2_write;
    end else begin
        IDRpipe2_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        IDRpipe3_read = grp_subT1_pipl_fu_312_IDRpipe1_read;
    end else begin
        IDRpipe3_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        IDRpipe3_write = grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe3_write;
    end else begin
        IDRpipe3_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        OutTuppipe1_read = grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_OutTuppipe1_read;
    end else begin
        OutTuppipe1_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        OutTuppipe1_write = grp_subT1_pipl_fu_312_OutTuppipe1_write;
    end else begin
        OutTuppipe1_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        OutTuppipe2_read = grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_OutTuppipe2_read;
    end else begin
        OutTuppipe2_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OutTuppipe2_write = grp_subT1_pipl_fu_312_OutTuppipe1_write;
    end else begin
        OutTuppipe2_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        OutTuppipe3_read = grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_OutTuppipe3_read;
    end else begin
        OutTuppipe3_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        OutTuppipe3_write = grp_subT1_pipl_fu_312_OutTuppipe1_write;
    end else begin
        OutTuppipe3_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        Wsigpipe1_read = grp_subT1_pipl_fu_312_Wsigpipe1161_read;
    end else begin
        Wsigpipe1_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == Wsigpipe3_full_n) | (1'b0 == Wsigpipe2_full_n) | (1'b0 == Wsigpipe1_full_n)) & (1'b1 == ap_CS_fsm_state7))) begin
        Wsigpipe1_write = 1'b1;
    end else begin
        Wsigpipe1_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        Wsigpipe2_read = grp_subT1_pipl_fu_312_Wsigpipe1161_read;
    end else begin
        Wsigpipe2_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == Wsigpipe3_full_n) | (1'b0 == Wsigpipe2_full_n) | (1'b0 == Wsigpipe1_full_n)) & (1'b1 == ap_CS_fsm_state7))) begin
        Wsigpipe2_write = 1'b1;
    end else begin
        Wsigpipe2_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        Wsigpipe3_read = grp_subT1_pipl_fu_312_Wsigpipe1161_read;
    end else begin
        Wsigpipe3_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == Wsigpipe3_full_n) | (1'b0 == Wsigpipe2_full_n) | (1'b0 == Wsigpipe1_full_n)) & (1'b1 == ap_CS_fsm_state7))) begin
        Wsigpipe3_write = 1'b1;
    end else begin
        Wsigpipe3_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_nbreadreq_fu_230_p5 == 1'd1))) begin
        X_TDATA_blk_n = X_TVALID_int_regslice;
    end else begin
        X_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((ids_TVALID_int_regslice == 1'b0) & (tmp_nbreadreq_fu_230_p5 == 1'd1)) | ((1'b0 == X_TVALID_int_regslice) & (tmp_nbreadreq_fu_230_p5 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (tmp_nbreadreq_fu_230_p5 == 1'd1))) begin
        X_TREADY_int_regslice = 1'b1;
    end else begin
        X_TREADY_int_regslice = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

always @ (*) begin
    if ((grp_subT1_pipl_fu_312_ap_done == 1'b0)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

assign ap_ST_fsm_state12_blk = 1'b0;

always @ (*) begin
    if ((grp_subT1_pipl_fu_312_ap_done == 1'b0)) begin
        ap_ST_fsm_state13_blk = 1'b1;
    end else begin
        ap_ST_fsm_state13_blk = 1'b0;
    end
end

assign ap_ST_fsm_state14_blk = 1'b0;

always @ (*) begin
    if ((grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_done == 1'b0)) begin
        ap_ST_fsm_state15_blk = 1'b1;
    end else begin
        ap_ST_fsm_state15_blk = 1'b0;
    end
end

always @ (*) begin
    if ((regslice_both_out_r_U_apdone_blk == 1'b1)) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((ids_TVALID_int_regslice == 1'b0) & (tmp_nbreadreq_fu_230_p5 == 1'd1)) | ((1'b0 == X_TVALID_int_regslice) & (tmp_nbreadreq_fu_230_p5 == 1'd1)))) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_top_Pipeline_Loop_children_fu_295_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if (((xbarIDRpipe_full_n == 1'b0) | (xbarpipe_full_n == 1'b0))) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == Wsigpipe3_full_n) | (1'b0 == Wsigpipe2_full_n) | (1'b0 == Wsigpipe1_full_n))) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if ((grp_subT1_pipl_fu_312_ap_done == 1'b0)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_out_r_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state16))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if ((((ap_wait_3 & ap_sub_ext_blocking_3) == 1'b1) & ((ap_wait_2 & ap_sub_ext_blocking_2) == 1'b1) & ((ap_wait_1 & ap_sub_ext_blocking_1) == 1'b1) & ((ap_wait_0 & ap_sub_ext_blocking_0) == 1'b1))) begin
        ap_ext_blocking_sub_n = 1'b0;
    end else begin
        ap_ext_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_wait_3 & ap_sub_int_blocking_3) == 1'b1) & ((ap_wait_2 & ap_sub_int_blocking_2) == 1'b1) & ((ap_wait_1 & ap_sub_int_blocking_1) == 1'b1) & ((ap_wait_0 & ap_sub_int_blocking_0) == 1'b1))) begin
        ap_int_blocking_sub_n = 1'b0;
    end else begin
        ap_int_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if (((regslice_both_out_r_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state16))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln712_fu_380_p1 == 2'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_nbreadreq_fu_230_p5 == 1'd1))) begin
        ap_sig_allocacmp_root_numv_0_load_1 = add_ln712_fu_408_p2;
    end else begin
        ap_sig_allocacmp_root_numv_0_load_1 = root_numv_0;
    end
end

always @ (*) begin
    if (((trunc_ln712_fu_380_p1 == 2'd1) & (1'b1 == ap_CS_fsm_state2) & (tmp_nbreadreq_fu_230_p5 == 1'd1))) begin
        ap_sig_allocacmp_root_numv_1_load_1 = add_ln712_fu_408_p2;
    end else begin
        ap_sig_allocacmp_root_numv_1_load_1 = root_numv_1;
    end
end

always @ (*) begin
    if ((~(trunc_ln712_fu_380_p1 == 2'd1) & ~(trunc_ln712_fu_380_p1 == 2'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_nbreadreq_fu_230_p5 == 1'd1))) begin
        ap_sig_allocacmp_root_numv_2_load_1 = add_ln712_fu_408_p2;
    end else begin
        ap_sig_allocacmp_root_numv_2_load_1 = root_numv_2;
    end
end

always @ (*) begin
    if ((((ap_wait_3 & ap_sub_str_blocking_3) == 1'b1) & ((ap_wait_2 & ap_sub_str_blocking_2) == 1'b1) & ((ap_wait_1 & ap_sub_str_blocking_1) == 1'b1) & ((ap_wait_0 & ap_sub_str_blocking_0) == 1'b1))) begin
        ap_str_blocking_sub_n = 1'b0;
    end else begin
        ap_str_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if ((grp_top_Pipeline_Loop_children_fu_295_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_0 = 1'b1;
    end else begin
        ap_sub_ext_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_1 = 1'b1;
    end else begin
        ap_sub_ext_blocking_1 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_subT1_pipl_fu_312_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_2 = 1'b1;
    end else begin
        ap_sub_ext_blocking_2 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_3 = 1'b1;
    end else begin
        ap_sub_ext_blocking_3 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_top_Pipeline_Loop_children_fu_295_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_0 = 1'b1;
    end else begin
        ap_sub_int_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_1 = 1'b1;
    end else begin
        ap_sub_int_blocking_1 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_subT1_pipl_fu_312_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_2 = 1'b1;
    end else begin
        ap_sub_int_blocking_2 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_3 = 1'b1;
    end else begin
        ap_sub_int_blocking_3 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_top_Pipeline_Loop_children_fu_295_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_0 = 1'b1;
    end else begin
        ap_sub_str_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_1 = 1'b1;
    end else begin
        ap_sub_str_blocking_1 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_subT1_pipl_fu_312_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_2 = 1'b1;
    end else begin
        ap_sub_str_blocking_2 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_3 = 1'b1;
    end else begin
        ap_sub_str_blocking_3 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state3 == ap_CS_fsm)) begin
        ap_wait_0 = 1'b1;
    end else begin
        ap_wait_0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state6 == ap_CS_fsm)) begin
        ap_wait_1 = 1'b1;
    end else begin
        ap_wait_1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state9 == ap_CS_fsm)) begin
        ap_wait_2 = 1'b1;
    end else begin
        ap_wait_2 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state15 == ap_CS_fsm)) begin
        ap_wait_3 = 1'b1;
    end else begin
        ap_wait_3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_subT1_pipl_fu_312_IDRpipe1_dout = IDRpipe3_dout;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_subT1_pipl_fu_312_IDRpipe1_dout = IDRpipe2_dout;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_subT1_pipl_fu_312_IDRpipe1_dout = IDRpipe1_dout;
    end else begin
        grp_subT1_pipl_fu_312_IDRpipe1_dout = IDRpipe3_dout;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_subT1_pipl_fu_312_IDRpipe1_empty_n = IDRpipe3_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_subT1_pipl_fu_312_IDRpipe1_empty_n = IDRpipe2_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_subT1_pipl_fu_312_IDRpipe1_empty_n = IDRpipe1_empty_n;
    end else begin
        grp_subT1_pipl_fu_312_IDRpipe1_empty_n = IDRpipe3_empty_n;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_subT1_pipl_fu_312_OutTuppipe1_full_n = OutTuppipe3_full_n;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_subT1_pipl_fu_312_OutTuppipe1_full_n = OutTuppipe2_full_n;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_subT1_pipl_fu_312_OutTuppipe1_full_n = OutTuppipe1_full_n;
    end else begin
        grp_subT1_pipl_fu_312_OutTuppipe1_full_n = OutTuppipe3_full_n;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_subT1_pipl_fu_312_Wsigpipe1161_dout = Wsigpipe3_dout;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_subT1_pipl_fu_312_Wsigpipe1161_dout = Wsigpipe2_dout;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_subT1_pipl_fu_312_Wsigpipe1161_dout = Wsigpipe1_dout;
    end else begin
        grp_subT1_pipl_fu_312_Wsigpipe1161_dout = Wsigpipe3_dout;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_subT1_pipl_fu_312_Wsigpipe1161_empty_n = Wsigpipe3_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_subT1_pipl_fu_312_Wsigpipe1161_empty_n = Wsigpipe2_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_subT1_pipl_fu_312_Wsigpipe1161_empty_n = Wsigpipe1_empty_n;
    end else begin
        grp_subT1_pipl_fu_312_Wsigpipe1161_empty_n = Wsigpipe3_empty_n;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_nbreadreq_fu_230_p5 == 1'd1))) begin
        ids_TDATA_blk_n = ids_TVALID_int_regslice;
    end else begin
        ids_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((ids_TVALID_int_regslice == 1'b0) & (tmp_nbreadreq_fu_230_p5 == 1'd1)) | ((1'b0 == X_TVALID_int_regslice) & (tmp_nbreadreq_fu_230_p5 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (tmp_nbreadreq_fu_230_p5 == 1'd1))) begin
        ids_TREADY_int_regslice = 1'b1;
    end else begin
        ids_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ext_blocking_n_reg == 1'b0) & (ap_ext_blocking_n == 1'b1))) begin
        stall_done_ext = 1'b1;
    end else begin
        stall_done_ext = 1'b0;
    end
end

always @ (*) begin
    if (((ap_int_blocking_n_reg == 1'b0) & (ap_int_blocking_n == 1'b1))) begin
        stall_done_int = 1'b1;
    end else begin
        stall_done_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_str_blocking_n_reg == 1'b0) & (ap_str_blocking_n == 1'b1))) begin
        stall_done_str = 1'b1;
    end else begin
        stall_done_str = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ext_blocking_n_reg == 1'b1) & (ap_ext_blocking_n == 1'b0))) begin
        stall_start_ext = 1'b1;
    end else begin
        stall_start_ext = 1'b0;
    end
end

always @ (*) begin
    if (((ap_int_blocking_n_reg == 1'b1) & (ap_int_blocking_n == 1'b0))) begin
        stall_start_int = 1'b1;
    end else begin
        stall_start_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_str_blocking_n_reg == 1'b1) & (ap_str_blocking_n == 1'b0))) begin
        stall_start_str = 1'b1;
    end else begin
        stall_start_str = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        xbarIDRpipe_read = grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_xbarIDRpipe_read;
    end else begin
        xbarIDRpipe_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((xbarIDRpipe_full_n == 1'b0) | (xbarpipe_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        xbarIDRpipe_write = 1'b1;
    end else begin
        xbarIDRpipe_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        xbarpipe_read = grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_xbarpipe_read;
    end else begin
        xbarpipe_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((xbarIDRpipe_full_n == 1'b0) | (xbarpipe_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        xbarpipe_write = 1'b1;
    end else begin
        xbarpipe_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~(((ids_TVALID_int_regslice == 1'b0) & (tmp_nbreadreq_fu_230_p5 == 1'd1)) | ((1'b0 == X_TVALID_int_regslice) & (tmp_nbreadreq_fu_230_p5 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (tmp_nbreadreq_fu_230_p5 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~(((ids_TVALID_int_regslice == 1'b0) & (tmp_nbreadreq_fu_230_p5 == 1'd1)) | ((1'b0 == X_TVALID_int_regslice) & (tmp_nbreadreq_fu_230_p5 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (tmp_nbreadreq_fu_230_p5 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_top_Pipeline_Loop_children_fu_295_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((xbarIDRpipe_full_n == 1'b0) | (xbarpipe_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((1'b0 == Wsigpipe3_full_n) | (1'b0 == Wsigpipe2_full_n) | (1'b0 == Wsigpipe1_full_n)) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (grp_subT1_pipl_fu_312_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (grp_subT1_pipl_fu_312_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (grp_subT1_pipl_fu_312_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((regslice_both_out_r_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign V_V_fu_368_p3 = {{trunc_ln740_fu_364_p1}, {8'd0}};

assign X_TREADY = regslice_both_X_V_data_V_U_ack_in;

assign add_ln712_fu_408_p2 = (tmp_s_fu_396_p5 + V_V_fu_368_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state2 = (((ids_TVALID_int_regslice == 1'b0) & (tmp_nbreadreq_fu_230_p5 == 1'd1)) | ((1'b0 == X_TVALID_int_regslice) & (tmp_nbreadreq_fu_230_p5 == 1'd1)));
end

always @ (*) begin
    ap_block_state2_ignore_call3 = (((ids_TVALID_int_regslice == 1'b0) & (tmp_nbreadreq_fu_230_p5 == 1'd1)) | ((1'b0 == X_TVALID_int_regslice) & (tmp_nbreadreq_fu_230_p5 == 1'd1)));
end

always @ (*) begin
    ap_block_state4 = ((xbarIDRpipe_full_n == 1'b0) | (xbarpipe_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state7 = ((1'b0 == Wsigpipe3_full_n) | (1'b0 == Wsigpipe2_full_n) | (1'b0 == Wsigpipe1_full_n));
end

assign ap_ext_blocking_n = (ap_ext_blocking_sub_n & 1'b1);

assign ap_int_blocking_n = (ap_int_blocking_sub_n & 1'b1);

assign ap_local_block = 1'b0;

assign ap_local_deadlock = 1'd0;

assign ap_str_blocking_cur_n = (ids_TDATA_blk_n & X_TDATA_blk_n);

assign ap_str_blocking_n = (ap_str_blocking_sub_n & ap_str_blocking_cur_n);

assign event_done = ap_done;

assign grp_subT1_pipl_fu_312_ap_start = grp_subT1_pipl_fu_312_ap_start_reg;

assign grp_top_Pipeline_Loop_children_fu_295_ap_start = grp_top_Pipeline_Loop_children_fu_295_ap_start_reg;

assign grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_start = grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_start_reg;

assign grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_start = grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_start_reg;

assign grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_out_r_TREADY = (out_r_TREADY_int_regslice & ap_CS_fsm_state15);

assign ids_TREADY = regslice_both_ids_V_data_V_U_ack_in;

assign m_axi_gmem0_ARADDR = 64'd0;

assign m_axi_gmem0_ARBURST = 2'd0;

assign m_axi_gmem0_ARCACHE = 4'd0;

assign m_axi_gmem0_ARID = 1'd0;

assign m_axi_gmem0_ARLEN = 8'd0;

assign m_axi_gmem0_ARLOCK = 2'd0;

assign m_axi_gmem0_ARPROT = 3'd0;

assign m_axi_gmem0_ARQOS = 4'd0;

assign m_axi_gmem0_ARREGION = 4'd0;

assign m_axi_gmem0_ARSIZE = 3'd0;

assign m_axi_gmem0_ARUSER = 1'd0;

assign m_axi_gmem0_ARVALID = 1'b0;

assign m_axi_gmem0_AWADDR = 64'd0;

assign m_axi_gmem0_AWBURST = 2'd0;

assign m_axi_gmem0_AWCACHE = 4'd0;

assign m_axi_gmem0_AWID = 1'd0;

assign m_axi_gmem0_AWLEN = 8'd0;

assign m_axi_gmem0_AWLOCK = 2'd0;

assign m_axi_gmem0_AWPROT = 3'd0;

assign m_axi_gmem0_AWQOS = 4'd0;

assign m_axi_gmem0_AWREGION = 4'd0;

assign m_axi_gmem0_AWSIZE = 3'd0;

assign m_axi_gmem0_AWUSER = 1'd0;

assign m_axi_gmem0_AWVALID = 1'b0;

assign m_axi_gmem0_BREADY = 1'b0;

assign m_axi_gmem0_RREADY = 1'b0;

assign m_axi_gmem0_WDATA = 256'd0;

assign m_axi_gmem0_WID = 1'd0;

assign m_axi_gmem0_WLAST = 1'b0;

assign m_axi_gmem0_WSTRB = 32'd0;

assign m_axi_gmem0_WUSER = 1'd0;

assign m_axi_gmem0_WVALID = 1'b0;

assign out_r_TVALID = regslice_both_out_r_U_vld_out;

assign tmp_nbreadreq_fu_230_p5 = X_TVALID_int_regslice;

assign tmp_s_fu_396_p4 = ids_TDATA_int_regslice[1:0];

assign trunc_ln712_fu_380_p1 = ids_TDATA_int_regslice[1:0];

assign trunc_ln740_fu_364_p1 = X_TDATA_int_regslice[11:0];

assign xbarIDRpipe_din = {{{trunc_ln740_reg_535}, {8'd0}}, {tmp_data_V_reg_540}};

endmodule //top
