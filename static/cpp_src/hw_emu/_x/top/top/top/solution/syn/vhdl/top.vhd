-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top is
generic (
    C_M_AXI_GMEM0_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM0_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_DATA_WIDTH : INTEGER := 256;
    C_M_AXI_GMEM0_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_local_block : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    event_done : OUT STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_WUSER_WIDTH-1 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_RUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_BUSER_WIDTH-1 downto 0);
    X_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    X_TVALID : IN STD_LOGIC;
    X_TREADY : OUT STD_LOGIC;
    X_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    X_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    ids_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    ids_TVALID : IN STD_LOGIC;
    ids_TREADY : OUT STD_LOGIC;
    ids_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    ids_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    out_r_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    out_r_TVALID : OUT STD_LOGIC;
    out_r_TREADY : IN STD_LOGIC;
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC;
    event_start : OUT STD_LOGIC;
    stall_start_ext : OUT STD_LOGIC;
    stall_done_ext : OUT STD_LOGIC;
    stall_start_str : OUT STD_LOGIC;
    stall_done_str : OUT STD_LOGIC;
    stall_start_int : OUT STD_LOGIC;
    stall_done_int : OUT STD_LOGIC );
end;


architecture behav of top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "top_top,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu200-fsgd2104-2-e,HLS_INPUT_CLOCK=3.333000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.433090,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=4319,HLS_SYN_LUT=5782,HLS_VERSION=2021_2}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_GMEM0_USER_VALUE : INTEGER range 63 downto 0 := 0;
    constant C_M_AXI_GMEM0_PROT_VALUE : INTEGER range 63 downto 0 := 0;
    constant C_M_AXI_GMEM0_CACHE_VALUE : INTEGER range 63 downto 0 := 3;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv256_lc_2 : STD_LOGIC_VECTOR (255 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

attribute shreg_extract : string;
    signal ap_local_deadlock : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_rst_reg_2 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_2 : signal is "no";
    signal ap_rst_reg_1 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_1 : signal is "no";
    signal ap_rst_n_inv : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_n_inv : signal is "no";
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_continue : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal adj_list : STD_LOGIC_VECTOR (63 downto 0);
    signal flushs : STD_LOGIC_VECTOR (31 downto 0);
    signal root_numv_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal root_numv_1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal root_numv_2 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal X_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_nbreadreq_fu_230_p5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ids_TDATA_blk_n : STD_LOGIC;
    signal trunc_ln740_fu_364_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln740_reg_535 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_data_V_reg_540 : STD_LOGIC_VECTOR (31 downto 0);
    signal root_numv_0_load_1_reg_548 : STD_LOGIC_VECTOR (19 downto 0);
    signal root_numv_1_load_1_reg_553 : STD_LOGIC_VECTOR (19 downto 0);
    signal root_numv_2_load_1_reg_558 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_top_Pipeline_Loop_children_fu_295_ap_start : STD_LOGIC;
    signal grp_top_Pipeline_Loop_children_fu_295_ap_done : STD_LOGIC;
    signal grp_top_Pipeline_Loop_children_fu_295_ap_idle : STD_LOGIC;
    signal grp_top_Pipeline_Loop_children_fu_295_ap_ready : STD_LOGIC;
    signal grp_top_Pipeline_Loop_children_fu_295_max_child_out : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_top_Pipeline_Loop_children_fu_295_max_child_out_ap_vld : STD_LOGIC;
    signal grp_top_Pipeline_Loop_children_fu_295_ap_ext_blocking_n : STD_LOGIC;
    signal grp_top_Pipeline_Loop_children_fu_295_ap_str_blocking_n : STD_LOGIC;
    signal grp_top_Pipeline_Loop_children_fu_295_ap_int_blocking_n : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_start : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_done : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_idle : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_ready : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_xbarpipe_read : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_xbarIDRpipe_read : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe1_din : STD_LOGIC_VECTOR (51 downto 0);
    signal grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe1_write : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe2_din : STD_LOGIC_VECTOR (51 downto 0);
    signal grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe2_write : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe3_din : STD_LOGIC_VECTOR (51 downto 0);
    signal grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe3_write : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_ext_blocking_n : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_str_blocking_n : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_int_blocking_n : STD_LOGIC;
    signal grp_subT1_pipl_fu_312_ap_start : STD_LOGIC;
    signal grp_subT1_pipl_fu_312_ap_done : STD_LOGIC;
    signal grp_subT1_pipl_fu_312_ap_idle : STD_LOGIC;
    signal grp_subT1_pipl_fu_312_ap_ready : STD_LOGIC;
    signal grp_subT1_pipl_fu_312_IDRpipe1_dout : STD_LOGIC_VECTOR (51 downto 0);
    signal grp_subT1_pipl_fu_312_IDRpipe1_empty_n : STD_LOGIC;
    signal grp_subT1_pipl_fu_312_IDRpipe1_read : STD_LOGIC;
    signal grp_subT1_pipl_fu_312_Wsigpipe1161_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_subT1_pipl_fu_312_Wsigpipe1161_empty_n : STD_LOGIC;
    signal grp_subT1_pipl_fu_312_Wsigpipe1161_read : STD_LOGIC;
    signal grp_subT1_pipl_fu_312_OutTuppipe1_din : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_subT1_pipl_fu_312_OutTuppipe1_full_n : STD_LOGIC;
    signal grp_subT1_pipl_fu_312_OutTuppipe1_write : STD_LOGIC;
    signal grp_subT1_pipl_fu_312_ap_ext_blocking_n : STD_LOGIC;
    signal grp_subT1_pipl_fu_312_ap_str_blocking_n : STD_LOGIC;
    signal grp_subT1_pipl_fu_312_ap_int_blocking_n : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_start : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_done : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_idle : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_ready : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_out_r_TREADY : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_OutTuppipe1_read : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_OutTuppipe3_read : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_OutTuppipe2_read : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_out_r_TDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_out_r_TVALID : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_ext_blocking_n : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_str_blocking_n : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_int_blocking_n : STD_LOGIC;
    signal grp_top_Pipeline_Loop_children_fu_295_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state2 : BOOLEAN;
    signal ap_block_state2_ignore_call3 : BOOLEAN;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal max_child_loc_fu_182 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal xbarIDRpipe_dout : STD_LOGIC_VECTOR (51 downto 0);
    signal xbarIDRpipe_empty_n : STD_LOGIC;
    signal xbarIDRpipe_read : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal IDRpipe1_full_n : STD_LOGIC;
    signal IDRpipe1_write : STD_LOGIC;
    signal xbarpipe_dout : STD_LOGIC_VECTOR (2 downto 0);
    signal xbarpipe_empty_n : STD_LOGIC;
    signal xbarpipe_read : STD_LOGIC;
    signal IDRpipe2_full_n : STD_LOGIC;
    signal IDRpipe2_write : STD_LOGIC;
    signal IDRpipe3_full_n : STD_LOGIC;
    signal IDRpipe3_write : STD_LOGIC;
    signal grp_subT1_pipl_fu_312_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal IDRpipe1_dout : STD_LOGIC_VECTOR (51 downto 0);
    signal IDRpipe1_empty_n : STD_LOGIC;
    signal IDRpipe1_read : STD_LOGIC;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal IDRpipe2_dout : STD_LOGIC_VECTOR (51 downto 0);
    signal IDRpipe2_empty_n : STD_LOGIC;
    signal IDRpipe2_read : STD_LOGIC;
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal IDRpipe3_dout : STD_LOGIC_VECTOR (51 downto 0);
    signal IDRpipe3_empty_n : STD_LOGIC;
    signal IDRpipe3_read : STD_LOGIC;
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal Wsigpipe1_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal Wsigpipe1_empty_n : STD_LOGIC;
    signal Wsigpipe1_read : STD_LOGIC;
    signal Wsigpipe2_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal Wsigpipe2_empty_n : STD_LOGIC;
    signal Wsigpipe2_read : STD_LOGIC;
    signal Wsigpipe3_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal Wsigpipe3_empty_n : STD_LOGIC;
    signal Wsigpipe3_read : STD_LOGIC;
    signal OutTuppipe1_full_n : STD_LOGIC;
    signal OutTuppipe1_write : STD_LOGIC;
    signal OutTuppipe2_full_n : STD_LOGIC;
    signal OutTuppipe2_write : STD_LOGIC;
    signal OutTuppipe3_full_n : STD_LOGIC;
    signal OutTuppipe3_write : STD_LOGIC;
    signal grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal OutTuppipe1_dout : STD_LOGIC_VECTOR (127 downto 0);
    signal OutTuppipe1_empty_n : STD_LOGIC;
    signal OutTuppipe1_read : STD_LOGIC;
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal OutTuppipe3_dout : STD_LOGIC_VECTOR (127 downto 0);
    signal OutTuppipe3_empty_n : STD_LOGIC;
    signal OutTuppipe3_read : STD_LOGIC;
    signal OutTuppipe2_dout : STD_LOGIC_VECTOR (127 downto 0);
    signal OutTuppipe2_empty_n : STD_LOGIC;
    signal OutTuppipe2_read : STD_LOGIC;
    signal add_ln712_fu_408_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln712_fu_380_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_root_numv_0_load_1 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_sig_allocacmp_root_numv_1_load_1 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_sig_allocacmp_root_numv_2_load_1 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal xbarpipe_full_n : STD_LOGIC;
    signal xbarpipe_write : STD_LOGIC;
    signal xbarIDRpipe_din : STD_LOGIC_VECTOR (51 downto 0);
    signal xbarIDRpipe_full_n : STD_LOGIC;
    signal xbarIDRpipe_write : STD_LOGIC;
    signal ap_block_state4 : BOOLEAN;
    signal Wsigpipe1_full_n : STD_LOGIC;
    signal Wsigpipe1_write : STD_LOGIC;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal Wsigpipe2_full_n : STD_LOGIC;
    signal Wsigpipe2_write : STD_LOGIC;
    signal Wsigpipe3_full_n : STD_LOGIC;
    signal Wsigpipe3_write : STD_LOGIC;
    signal ap_block_state7 : BOOLEAN;
    signal tmp_s_fu_396_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_s_fu_396_p5 : STD_LOGIC_VECTOR (19 downto 0);
    signal V_V_fu_368_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal regslice_both_out_r_U_apdone_blk : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_str_blocking_cur_n : STD_LOGIC;
    signal ap_ext_blocking_sub_n : STD_LOGIC;
    signal ap_wait_0 : STD_LOGIC;
    signal ap_sub_ext_blocking_0 : STD_LOGIC;
    signal ap_wait_1 : STD_LOGIC;
    signal ap_sub_ext_blocking_1 : STD_LOGIC;
    signal ap_wait_2 : STD_LOGIC;
    signal ap_sub_ext_blocking_2 : STD_LOGIC;
    signal ap_wait_3 : STD_LOGIC;
    signal ap_sub_ext_blocking_3 : STD_LOGIC;
    signal ap_str_blocking_sub_n : STD_LOGIC;
    signal ap_sub_str_blocking_0 : STD_LOGIC;
    signal ap_sub_str_blocking_1 : STD_LOGIC;
    signal ap_sub_str_blocking_2 : STD_LOGIC;
    signal ap_sub_str_blocking_3 : STD_LOGIC;
    signal ap_int_blocking_sub_n : STD_LOGIC;
    signal ap_sub_int_blocking_0 : STD_LOGIC;
    signal ap_sub_int_blocking_1 : STD_LOGIC;
    signal ap_sub_int_blocking_2 : STD_LOGIC;
    signal ap_sub_int_blocking_3 : STD_LOGIC;
    signal ap_ext_blocking_n : STD_LOGIC;
    signal ap_str_blocking_n : STD_LOGIC;
    signal ap_int_blocking_n : STD_LOGIC;
    signal ap_ext_blocking_n_reg : STD_LOGIC;
    signal ap_str_blocking_n_reg : STD_LOGIC;
    signal ap_int_blocking_n_reg : STD_LOGIC;
    signal regslice_both_X_V_data_V_U_apdone_blk : STD_LOGIC;
    signal X_TDATA_int_regslice : STD_LOGIC_VECTOR (23 downto 0);
    signal X_TVALID_int_regslice : STD_LOGIC;
    signal X_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_X_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_X_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal X_TKEEP_int_regslice : STD_LOGIC_VECTOR (2 downto 0);
    signal regslice_both_X_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_X_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_X_V_last_V_U_apdone_blk : STD_LOGIC;
    signal X_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_X_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_X_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_ids_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ids_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal ids_TVALID_int_regslice : STD_LOGIC;
    signal ids_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_ids_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_ids_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal ids_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_ids_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_ids_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_ids_V_last_V_U_apdone_blk : STD_LOGIC;
    signal ids_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_ids_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_ids_V_last_V_U_ack_in : STD_LOGIC;
    signal out_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_out_r_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component top_top_Pipeline_Loop_children IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        root_numv_0_load_1 : IN STD_LOGIC_VECTOR (19 downto 0);
        root_numv_1_load_1 : IN STD_LOGIC_VECTOR (19 downto 0);
        root_numv_2_load_1 : IN STD_LOGIC_VECTOR (19 downto 0);
        max_child_out : OUT STD_LOGIC_VECTOR (2 downto 0);
        max_child_out_ap_vld : OUT STD_LOGIC;
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component top_top_Pipeline_VITIS_LOOP_154_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        xbarpipe_dout : IN STD_LOGIC_VECTOR (2 downto 0);
        xbarpipe_empty_n : IN STD_LOGIC;
        xbarpipe_read : OUT STD_LOGIC;
        xbarIDRpipe_dout : IN STD_LOGIC_VECTOR (51 downto 0);
        xbarIDRpipe_empty_n : IN STD_LOGIC;
        xbarIDRpipe_read : OUT STD_LOGIC;
        IDRpipe1_din : OUT STD_LOGIC_VECTOR (51 downto 0);
        IDRpipe1_full_n : IN STD_LOGIC;
        IDRpipe1_write : OUT STD_LOGIC;
        IDRpipe2_din : OUT STD_LOGIC_VECTOR (51 downto 0);
        IDRpipe2_full_n : IN STD_LOGIC;
        IDRpipe2_write : OUT STD_LOGIC;
        IDRpipe3_din : OUT STD_LOGIC_VECTOR (51 downto 0);
        IDRpipe3_full_n : IN STD_LOGIC;
        IDRpipe3_write : OUT STD_LOGIC;
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component top_subT1_pipl IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        IDRpipe1_dout : IN STD_LOGIC_VECTOR (51 downto 0);
        IDRpipe1_empty_n : IN STD_LOGIC;
        IDRpipe1_read : OUT STD_LOGIC;
        Wsigpipe1161_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        Wsigpipe1161_empty_n : IN STD_LOGIC;
        Wsigpipe1161_read : OUT STD_LOGIC;
        OutTuppipe1_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        OutTuppipe1_full_n : IN STD_LOGIC;
        OutTuppipe1_write : OUT STD_LOGIC;
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component top_top_Pipeline_VITIS_LOOP_199_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_r_TREADY : IN STD_LOGIC;
        OutTuppipe1_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        OutTuppipe1_empty_n : IN STD_LOGIC;
        OutTuppipe1_read : OUT STD_LOGIC;
        OutTuppipe3_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        OutTuppipe3_empty_n : IN STD_LOGIC;
        OutTuppipe3_read : OUT STD_LOGIC;
        OutTuppipe2_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        OutTuppipe2_empty_n : IN STD_LOGIC;
        OutTuppipe2_read : OUT STD_LOGIC;
        out_r_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        out_r_TVALID : OUT STD_LOGIC;
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component top_mux_32_20_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (19 downto 0);
        din1 : IN STD_LOGIC_VECTOR (19 downto 0);
        din2 : IN STD_LOGIC_VECTOR (19 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component top_fifo_w3_d1_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (2 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w52_d1_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (51 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (51 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w52_d32_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (51 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (51 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w1_d1_S_x IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w128_d32_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (127 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (127 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        adj_list : OUT STD_LOGIC_VECTOR (63 downto 0);
        flushs : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        event_start : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_continue : OUT STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        ap_local_deadlock : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component top_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    grp_top_Pipeline_Loop_children_fu_295 : component top_top_Pipeline_Loop_children
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_top_Pipeline_Loop_children_fu_295_ap_start,
        ap_done => grp_top_Pipeline_Loop_children_fu_295_ap_done,
        ap_idle => grp_top_Pipeline_Loop_children_fu_295_ap_idle,
        ap_ready => grp_top_Pipeline_Loop_children_fu_295_ap_ready,
        root_numv_0_load_1 => root_numv_0_load_1_reg_548,
        root_numv_1_load_1 => root_numv_1_load_1_reg_553,
        root_numv_2_load_1 => root_numv_2_load_1_reg_558,
        max_child_out => grp_top_Pipeline_Loop_children_fu_295_max_child_out,
        max_child_out_ap_vld => grp_top_Pipeline_Loop_children_fu_295_max_child_out_ap_vld,
        ap_ext_blocking_n => grp_top_Pipeline_Loop_children_fu_295_ap_ext_blocking_n,
        ap_str_blocking_n => grp_top_Pipeline_Loop_children_fu_295_ap_str_blocking_n,
        ap_int_blocking_n => grp_top_Pipeline_Loop_children_fu_295_ap_int_blocking_n);

    grp_top_Pipeline_VITIS_LOOP_154_1_fu_303 : component top_top_Pipeline_VITIS_LOOP_154_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_start,
        ap_done => grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_done,
        ap_idle => grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_idle,
        ap_ready => grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_ready,
        xbarpipe_dout => xbarpipe_dout,
        xbarpipe_empty_n => xbarpipe_empty_n,
        xbarpipe_read => grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_xbarpipe_read,
        xbarIDRpipe_dout => xbarIDRpipe_dout,
        xbarIDRpipe_empty_n => xbarIDRpipe_empty_n,
        xbarIDRpipe_read => grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_xbarIDRpipe_read,
        IDRpipe1_din => grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe1_din,
        IDRpipe1_full_n => IDRpipe1_full_n,
        IDRpipe1_write => grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe1_write,
        IDRpipe2_din => grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe2_din,
        IDRpipe2_full_n => IDRpipe2_full_n,
        IDRpipe2_write => grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe2_write,
        IDRpipe3_din => grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe3_din,
        IDRpipe3_full_n => IDRpipe3_full_n,
        IDRpipe3_write => grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe3_write,
        ap_ext_blocking_n => grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_ext_blocking_n,
        ap_str_blocking_n => grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_str_blocking_n,
        ap_int_blocking_n => grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_int_blocking_n);

    grp_subT1_pipl_fu_312 : component top_subT1_pipl
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_subT1_pipl_fu_312_ap_start,
        ap_done => grp_subT1_pipl_fu_312_ap_done,
        ap_idle => grp_subT1_pipl_fu_312_ap_idle,
        ap_ready => grp_subT1_pipl_fu_312_ap_ready,
        IDRpipe1_dout => grp_subT1_pipl_fu_312_IDRpipe1_dout,
        IDRpipe1_empty_n => grp_subT1_pipl_fu_312_IDRpipe1_empty_n,
        IDRpipe1_read => grp_subT1_pipl_fu_312_IDRpipe1_read,
        Wsigpipe1161_dout => grp_subT1_pipl_fu_312_Wsigpipe1161_dout,
        Wsigpipe1161_empty_n => grp_subT1_pipl_fu_312_Wsigpipe1161_empty_n,
        Wsigpipe1161_read => grp_subT1_pipl_fu_312_Wsigpipe1161_read,
        OutTuppipe1_din => grp_subT1_pipl_fu_312_OutTuppipe1_din,
        OutTuppipe1_full_n => grp_subT1_pipl_fu_312_OutTuppipe1_full_n,
        OutTuppipe1_write => grp_subT1_pipl_fu_312_OutTuppipe1_write,
        ap_ext_blocking_n => grp_subT1_pipl_fu_312_ap_ext_blocking_n,
        ap_str_blocking_n => grp_subT1_pipl_fu_312_ap_str_blocking_n,
        ap_int_blocking_n => grp_subT1_pipl_fu_312_ap_int_blocking_n);

    grp_top_Pipeline_VITIS_LOOP_199_1_fu_351 : component top_top_Pipeline_VITIS_LOOP_199_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_start,
        ap_done => grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_done,
        ap_idle => grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_idle,
        ap_ready => grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_ready,
        out_r_TREADY => grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_out_r_TREADY,
        OutTuppipe1_dout => OutTuppipe1_dout,
        OutTuppipe1_empty_n => OutTuppipe1_empty_n,
        OutTuppipe1_read => grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_OutTuppipe1_read,
        OutTuppipe3_dout => OutTuppipe3_dout,
        OutTuppipe3_empty_n => OutTuppipe3_empty_n,
        OutTuppipe3_read => grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_OutTuppipe3_read,
        OutTuppipe2_dout => OutTuppipe2_dout,
        OutTuppipe2_empty_n => OutTuppipe2_empty_n,
        OutTuppipe2_read => grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_OutTuppipe2_read,
        out_r_TDATA => grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_out_r_TDATA,
        out_r_TVALID => grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_out_r_TVALID,
        ap_ext_blocking_n => grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_ext_blocking_n,
        ap_str_blocking_n => grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_str_blocking_n,
        ap_int_blocking_n => grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_int_blocking_n);

    control_s_axi_U : component top_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        adj_list => adj_list,
        flushs => flushs,
        ap_start => ap_start,
        interrupt => interrupt,
        event_start => event_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_continue => ap_continue,
        ap_idle => ap_idle,
        ap_local_deadlock => ap_local_deadlock);

    mux_32_20_1_1_U88 : component top_mux_32_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 20,
        din2_WIDTH => 20,
        din3_WIDTH => 2,
        dout_WIDTH => 20)
    port map (
        din0 => root_numv_0,
        din1 => root_numv_1,
        din2 => root_numv_2,
        din3 => tmp_s_fu_396_p4,
        dout => tmp_s_fu_396_p5);

    xbarpipe_fifo_U : component top_fifo_w3_d1_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => max_child_loc_fu_182,
        if_full_n => xbarpipe_full_n,
        if_write => xbarpipe_write,
        if_dout => xbarpipe_dout,
        if_empty_n => xbarpipe_empty_n,
        if_read => xbarpipe_read);

    xbarIDRpipe_fifo_U : component top_fifo_w52_d1_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xbarIDRpipe_din,
        if_full_n => xbarIDRpipe_full_n,
        if_write => xbarIDRpipe_write,
        if_dout => xbarIDRpipe_dout,
        if_empty_n => xbarIDRpipe_empty_n,
        if_read => xbarIDRpipe_read);

    IDRpipe1_fifo_U : component top_fifo_w52_d32_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe1_din,
        if_full_n => IDRpipe1_full_n,
        if_write => IDRpipe1_write,
        if_dout => IDRpipe1_dout,
        if_empty_n => IDRpipe1_empty_n,
        if_read => IDRpipe1_read);

    IDRpipe2_fifo_U : component top_fifo_w52_d32_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe2_din,
        if_full_n => IDRpipe2_full_n,
        if_write => IDRpipe2_write,
        if_dout => IDRpipe2_dout,
        if_empty_n => IDRpipe2_empty_n,
        if_read => IDRpipe2_read);

    IDRpipe3_fifo_U : component top_fifo_w52_d32_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe3_din,
        if_full_n => IDRpipe3_full_n,
        if_write => IDRpipe3_write,
        if_dout => IDRpipe3_dout,
        if_empty_n => IDRpipe3_empty_n,
        if_read => IDRpipe3_read);

    Wsigpipe1_fifo_U : component top_fifo_w1_d1_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ap_const_lv1_1,
        if_full_n => Wsigpipe1_full_n,
        if_write => Wsigpipe1_write,
        if_dout => Wsigpipe1_dout,
        if_empty_n => Wsigpipe1_empty_n,
        if_read => Wsigpipe1_read);

    Wsigpipe2_fifo_U : component top_fifo_w1_d1_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ap_const_lv1_1,
        if_full_n => Wsigpipe2_full_n,
        if_write => Wsigpipe2_write,
        if_dout => Wsigpipe2_dout,
        if_empty_n => Wsigpipe2_empty_n,
        if_read => Wsigpipe2_read);

    Wsigpipe3_fifo_U : component top_fifo_w1_d1_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ap_const_lv1_1,
        if_full_n => Wsigpipe3_full_n,
        if_write => Wsigpipe3_write,
        if_dout => Wsigpipe3_dout,
        if_empty_n => Wsigpipe3_empty_n,
        if_read => Wsigpipe3_read);

    OutTuppipe1_fifo_U : component top_fifo_w128_d32_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_subT1_pipl_fu_312_OutTuppipe1_din,
        if_full_n => OutTuppipe1_full_n,
        if_write => OutTuppipe1_write,
        if_dout => OutTuppipe1_dout,
        if_empty_n => OutTuppipe1_empty_n,
        if_read => OutTuppipe1_read);

    OutTuppipe2_fifo_U : component top_fifo_w128_d32_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_subT1_pipl_fu_312_OutTuppipe1_din,
        if_full_n => OutTuppipe2_full_n,
        if_write => OutTuppipe2_write,
        if_dout => OutTuppipe2_dout,
        if_empty_n => OutTuppipe2_empty_n,
        if_read => OutTuppipe2_read);

    OutTuppipe3_fifo_U : component top_fifo_w128_d32_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_subT1_pipl_fu_312_OutTuppipe1_din,
        if_full_n => OutTuppipe3_full_n,
        if_write => OutTuppipe3_write,
        if_dout => OutTuppipe3_dout,
        if_empty_n => OutTuppipe3_empty_n,
        if_read => OutTuppipe3_read);

    regslice_both_X_V_data_V_U : component top_regslice_both
    generic map (
        DataWidth => 24)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => X_TDATA,
        vld_in => X_TVALID,
        ack_in => regslice_both_X_V_data_V_U_ack_in,
        data_out => X_TDATA_int_regslice,
        vld_out => X_TVALID_int_regslice,
        ack_out => X_TREADY_int_regslice,
        apdone_blk => regslice_both_X_V_data_V_U_apdone_blk);

    regslice_both_X_V_keep_V_U : component top_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => X_TKEEP,
        vld_in => X_TVALID,
        ack_in => regslice_both_X_V_keep_V_U_ack_in,
        data_out => X_TKEEP_int_regslice,
        vld_out => regslice_both_X_V_keep_V_U_vld_out,
        ack_out => X_TREADY_int_regslice,
        apdone_blk => regslice_both_X_V_keep_V_U_apdone_blk);

    regslice_both_X_V_last_V_U : component top_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => X_TLAST,
        vld_in => X_TVALID,
        ack_in => regslice_both_X_V_last_V_U_ack_in,
        data_out => X_TLAST_int_regslice,
        vld_out => regslice_both_X_V_last_V_U_vld_out,
        ack_out => X_TREADY_int_regslice,
        apdone_blk => regslice_both_X_V_last_V_U_apdone_blk);

    regslice_both_ids_V_data_V_U : component top_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ids_TDATA,
        vld_in => ids_TVALID,
        ack_in => regslice_both_ids_V_data_V_U_ack_in,
        data_out => ids_TDATA_int_regslice,
        vld_out => ids_TVALID_int_regslice,
        ack_out => ids_TREADY_int_regslice,
        apdone_blk => regslice_both_ids_V_data_V_U_apdone_blk);

    regslice_both_ids_V_keep_V_U : component top_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ids_TKEEP,
        vld_in => ids_TVALID,
        ack_in => regslice_both_ids_V_keep_V_U_ack_in,
        data_out => ids_TKEEP_int_regslice,
        vld_out => regslice_both_ids_V_keep_V_U_vld_out,
        ack_out => ids_TREADY_int_regslice,
        apdone_blk => regslice_both_ids_V_keep_V_U_apdone_blk);

    regslice_both_ids_V_last_V_U : component top_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ids_TLAST,
        vld_in => ids_TVALID,
        ack_in => regslice_both_ids_V_last_V_U_ack_in,
        data_out => ids_TLAST_int_regslice,
        vld_out => regslice_both_ids_V_last_V_U_vld_out,
        ack_out => ids_TREADY_int_regslice,
        apdone_blk => regslice_both_ids_V_last_V_U_apdone_blk);

    regslice_both_out_r_U : component top_regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_out_r_TDATA,
        vld_in => grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_out_r_TVALID,
        ack_in => out_r_TREADY_int_regslice,
        data_out => out_r_TDATA,
        vld_out => regslice_both_out_r_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_r_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((regslice_both_out_r_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_subT1_pipl_fu_312_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_subT1_pipl_fu_312_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    grp_subT1_pipl_fu_312_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_subT1_pipl_fu_312_ap_ready = ap_const_logic_1)) then 
                    grp_subT1_pipl_fu_312_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_top_Pipeline_Loop_children_fu_295_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_top_Pipeline_Loop_children_fu_295_ap_start_reg <= ap_const_logic_0;
            else
                if ((not((((ids_TVALID_int_regslice = ap_const_logic_0) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1)) or ((ap_const_logic_0 = X_TVALID_int_regslice) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1))) then 
                    grp_top_Pipeline_Loop_children_fu_295_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_top_Pipeline_Loop_children_fu_295_ap_ready = ap_const_logic_1)) then 
                    grp_top_Pipeline_Loop_children_fu_295_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_ready = ap_const_logic_1)) then 
                    grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_ready = ap_const_logic_1)) then 
                    grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_ext_blocking_n_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ext_blocking_n_reg <= ap_ext_blocking_n;
        end if;
    end process;

    ap_int_blocking_n_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_int_blocking_n_reg <= ap_int_blocking_n;
        end if;
    end process;

    ap_rst_n_inv_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_n_inv <= ap_rst_reg_1;
        end if;
    end process;

    ap_rst_reg_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_reg_1 <= ap_rst_reg_2;
        end if;
    end process;

    ap_rst_reg_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
                        ap_rst_reg_2 <= not(ap_rst_n);
        end if;
    end process;

    ap_str_blocking_n_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_str_blocking_n_reg <= ap_str_blocking_n;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_top_Pipeline_Loop_children_fu_295_max_child_out_ap_vld = ap_const_logic_1))) then
                max_child_loc_fu_182 <= grp_top_Pipeline_Loop_children_fu_295_max_child_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ids_TVALID_int_regslice = ap_const_logic_0) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1)) or ((ap_const_logic_0 = X_TVALID_int_regslice) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1)))) and (trunc_ln712_fu_380_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1))) then
                root_numv_0 <= add_ln712_fu_408_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1))) then
                root_numv_0_load_1_reg_548 <= ap_sig_allocacmp_root_numv_0_load_1;
                root_numv_1_load_1_reg_553 <= ap_sig_allocacmp_root_numv_1_load_1;
                root_numv_2_load_1_reg_558 <= ap_sig_allocacmp_root_numv_2_load_1;
                tmp_data_V_reg_540 <= ids_TDATA_int_regslice;
                trunc_ln740_reg_535 <= trunc_ln740_fu_364_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ids_TVALID_int_regslice = ap_const_logic_0) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1)) or ((ap_const_logic_0 = X_TVALID_int_regslice) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1)))) and (trunc_ln712_fu_380_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1))) then
                root_numv_1 <= add_ln712_fu_408_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ids_TVALID_int_regslice = ap_const_logic_0) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1)) or ((ap_const_logic_0 = X_TVALID_int_regslice) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1)))) and not((trunc_ln712_fu_380_p1 = ap_const_lv2_1)) and not((trunc_ln712_fu_380_p1 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1))) then
                root_numv_2 <= add_ln712_fu_408_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, tmp_nbreadreq_fu_230_p5, grp_top_Pipeline_Loop_children_fu_295_ap_done, grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_done, grp_subT1_pipl_fu_312_ap_done, grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_done, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state4, xbarpipe_full_n, xbarIDRpipe_full_n, Wsigpipe1_full_n, ap_CS_fsm_state7, Wsigpipe2_full_n, Wsigpipe3_full_n, ap_CS_fsm_state16, regslice_both_out_r_U_apdone_blk, X_TVALID_int_regslice, ids_TVALID_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not((((ids_TVALID_int_regslice = ap_const_logic_0) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1)) or ((ap_const_logic_0 = X_TVALID_int_regslice) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif ((not((((ids_TVALID_int_regslice = ap_const_logic_0) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1)) or ((ap_const_logic_0 = X_TVALID_int_regslice) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_top_Pipeline_Loop_children_fu_295_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not(((xbarIDRpipe_full_n = ap_const_logic_0) or (xbarpipe_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if ((not(((ap_const_logic_0 = Wsigpipe3_full_n) or (ap_const_logic_0 = Wsigpipe2_full_n) or (ap_const_logic_0 = Wsigpipe1_full_n))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_subT1_pipl_fu_312_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (grp_subT1_pipl_fu_312_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_subT1_pipl_fu_312_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if (((regslice_both_out_r_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXX";
        end case;
    end process;

    IDRpipe1_read_assign_proc : process(grp_subT1_pipl_fu_312_IDRpipe1_read, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            IDRpipe1_read <= grp_subT1_pipl_fu_312_IDRpipe1_read;
        else 
            IDRpipe1_read <= ap_const_logic_0;
        end if; 
    end process;


    IDRpipe1_write_assign_proc : process(grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe1_write, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            IDRpipe1_write <= grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe1_write;
        else 
            IDRpipe1_write <= ap_const_logic_0;
        end if; 
    end process;


    IDRpipe2_read_assign_proc : process(grp_subT1_pipl_fu_312_IDRpipe1_read, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            IDRpipe2_read <= grp_subT1_pipl_fu_312_IDRpipe1_read;
        else 
            IDRpipe2_read <= ap_const_logic_0;
        end if; 
    end process;


    IDRpipe2_write_assign_proc : process(grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe2_write, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            IDRpipe2_write <= grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe2_write;
        else 
            IDRpipe2_write <= ap_const_logic_0;
        end if; 
    end process;


    IDRpipe3_read_assign_proc : process(grp_subT1_pipl_fu_312_IDRpipe1_read, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            IDRpipe3_read <= grp_subT1_pipl_fu_312_IDRpipe1_read;
        else 
            IDRpipe3_read <= ap_const_logic_0;
        end if; 
    end process;


    IDRpipe3_write_assign_proc : process(grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe3_write, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            IDRpipe3_write <= grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_IDRpipe3_write;
        else 
            IDRpipe3_write <= ap_const_logic_0;
        end if; 
    end process;


    OutTuppipe1_read_assign_proc : process(grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_OutTuppipe1_read, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            OutTuppipe1_read <= grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_OutTuppipe1_read;
        else 
            OutTuppipe1_read <= ap_const_logic_0;
        end if; 
    end process;


    OutTuppipe1_write_assign_proc : process(grp_subT1_pipl_fu_312_OutTuppipe1_write, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            OutTuppipe1_write <= grp_subT1_pipl_fu_312_OutTuppipe1_write;
        else 
            OutTuppipe1_write <= ap_const_logic_0;
        end if; 
    end process;


    OutTuppipe2_read_assign_proc : process(grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_OutTuppipe2_read, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            OutTuppipe2_read <= grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_OutTuppipe2_read;
        else 
            OutTuppipe2_read <= ap_const_logic_0;
        end if; 
    end process;


    OutTuppipe2_write_assign_proc : process(grp_subT1_pipl_fu_312_OutTuppipe1_write, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            OutTuppipe2_write <= grp_subT1_pipl_fu_312_OutTuppipe1_write;
        else 
            OutTuppipe2_write <= ap_const_logic_0;
        end if; 
    end process;


    OutTuppipe3_read_assign_proc : process(grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_OutTuppipe3_read, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            OutTuppipe3_read <= grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_OutTuppipe3_read;
        else 
            OutTuppipe3_read <= ap_const_logic_0;
        end if; 
    end process;


    OutTuppipe3_write_assign_proc : process(grp_subT1_pipl_fu_312_OutTuppipe1_write, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            OutTuppipe3_write <= grp_subT1_pipl_fu_312_OutTuppipe1_write;
        else 
            OutTuppipe3_write <= ap_const_logic_0;
        end if; 
    end process;

    V_V_fu_368_p3 <= (trunc_ln740_fu_364_p1 & ap_const_lv8_0);

    Wsigpipe1_read_assign_proc : process(grp_subT1_pipl_fu_312_Wsigpipe1161_read, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            Wsigpipe1_read <= grp_subT1_pipl_fu_312_Wsigpipe1161_read;
        else 
            Wsigpipe1_read <= ap_const_logic_0;
        end if; 
    end process;


    Wsigpipe1_write_assign_proc : process(Wsigpipe1_full_n, ap_CS_fsm_state7, Wsigpipe2_full_n, Wsigpipe3_full_n)
    begin
        if ((not(((ap_const_logic_0 = Wsigpipe3_full_n) or (ap_const_logic_0 = Wsigpipe2_full_n) or (ap_const_logic_0 = Wsigpipe1_full_n))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            Wsigpipe1_write <= ap_const_logic_1;
        else 
            Wsigpipe1_write <= ap_const_logic_0;
        end if; 
    end process;


    Wsigpipe2_read_assign_proc : process(grp_subT1_pipl_fu_312_Wsigpipe1161_read, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            Wsigpipe2_read <= grp_subT1_pipl_fu_312_Wsigpipe1161_read;
        else 
            Wsigpipe2_read <= ap_const_logic_0;
        end if; 
    end process;


    Wsigpipe2_write_assign_proc : process(Wsigpipe1_full_n, ap_CS_fsm_state7, Wsigpipe2_full_n, Wsigpipe3_full_n)
    begin
        if ((not(((ap_const_logic_0 = Wsigpipe3_full_n) or (ap_const_logic_0 = Wsigpipe2_full_n) or (ap_const_logic_0 = Wsigpipe1_full_n))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            Wsigpipe2_write <= ap_const_logic_1;
        else 
            Wsigpipe2_write <= ap_const_logic_0;
        end if; 
    end process;


    Wsigpipe3_read_assign_proc : process(grp_subT1_pipl_fu_312_Wsigpipe1161_read, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            Wsigpipe3_read <= grp_subT1_pipl_fu_312_Wsigpipe1161_read;
        else 
            Wsigpipe3_read <= ap_const_logic_0;
        end if; 
    end process;


    Wsigpipe3_write_assign_proc : process(Wsigpipe1_full_n, ap_CS_fsm_state7, Wsigpipe2_full_n, Wsigpipe3_full_n)
    begin
        if ((not(((ap_const_logic_0 = Wsigpipe3_full_n) or (ap_const_logic_0 = Wsigpipe2_full_n) or (ap_const_logic_0 = Wsigpipe1_full_n))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            Wsigpipe3_write <= ap_const_logic_1;
        else 
            Wsigpipe3_write <= ap_const_logic_0;
        end if; 
    end process;


    X_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state2, tmp_nbreadreq_fu_230_p5, X_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1))) then 
            X_TDATA_blk_n <= X_TVALID_int_regslice;
        else 
            X_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    X_TREADY <= regslice_both_X_V_data_V_U_ack_in;

    X_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_state2, tmp_nbreadreq_fu_230_p5, X_TVALID_int_regslice, ids_TVALID_int_regslice)
    begin
        if ((not((((ids_TVALID_int_regslice = ap_const_logic_0) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1)) or ((ap_const_logic_0 = X_TVALID_int_regslice) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1))) then 
            X_TREADY_int_regslice <= ap_const_logic_1;
        else 
            X_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    add_ln712_fu_408_p2 <= std_logic_vector(unsigned(tmp_s_fu_396_p5) + unsigned(V_V_fu_368_p3));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(grp_subT1_pipl_fu_312_ap_done)
    begin
        if ((grp_subT1_pipl_fu_312_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state13_blk_assign_proc : process(grp_subT1_pipl_fu_312_ap_done)
    begin
        if ((grp_subT1_pipl_fu_312_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_done)
    begin
        if ((grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state16_blk_assign_proc : process(regslice_both_out_r_U_apdone_blk)
    begin
        if ((regslice_both_out_r_U_apdone_blk = ap_const_logic_1)) then 
            ap_ST_fsm_state16_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state16_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(tmp_nbreadreq_fu_230_p5, X_TVALID_int_regslice, ids_TVALID_int_regslice)
    begin
        if ((((ids_TVALID_int_regslice = ap_const_logic_0) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1)) or ((ap_const_logic_0 = X_TVALID_int_regslice) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1)))) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(grp_top_Pipeline_Loop_children_fu_295_ap_done)
    begin
        if ((grp_top_Pipeline_Loop_children_fu_295_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(xbarpipe_full_n, xbarIDRpipe_full_n)
    begin
        if (((xbarIDRpipe_full_n = ap_const_logic_0) or (xbarpipe_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_done)
    begin
        if ((grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state7_blk_assign_proc : process(Wsigpipe1_full_n, Wsigpipe2_full_n, Wsigpipe3_full_n)
    begin
        if (((ap_const_logic_0 = Wsigpipe3_full_n) or (ap_const_logic_0 = Wsigpipe2_full_n) or (ap_const_logic_0 = Wsigpipe1_full_n))) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_subT1_pipl_fu_312_ap_done)
    begin
        if ((grp_subT1_pipl_fu_312_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state2_assign_proc : process(tmp_nbreadreq_fu_230_p5, X_TVALID_int_regslice, ids_TVALID_int_regslice)
    begin
                ap_block_state2 <= (((ids_TVALID_int_regslice = ap_const_logic_0) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1)) or ((ap_const_logic_0 = X_TVALID_int_regslice) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1)));
    end process;


    ap_block_state2_ignore_call3_assign_proc : process(tmp_nbreadreq_fu_230_p5, X_TVALID_int_regslice, ids_TVALID_int_regslice)
    begin
                ap_block_state2_ignore_call3 <= (((ids_TVALID_int_regslice = ap_const_logic_0) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1)) or ((ap_const_logic_0 = X_TVALID_int_regslice) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1)));
    end process;


    ap_block_state4_assign_proc : process(xbarpipe_full_n, xbarIDRpipe_full_n)
    begin
                ap_block_state4 <= ((xbarIDRpipe_full_n = ap_const_logic_0) or (xbarpipe_full_n = ap_const_logic_0));
    end process;


    ap_block_state7_assign_proc : process(Wsigpipe1_full_n, Wsigpipe2_full_n, Wsigpipe3_full_n)
    begin
                ap_block_state7 <= ((ap_const_logic_0 = Wsigpipe3_full_n) or (ap_const_logic_0 = Wsigpipe2_full_n) or (ap_const_logic_0 = Wsigpipe1_full_n));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state16, regslice_both_out_r_U_apdone_blk)
    begin
        if (((regslice_both_out_r_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_ext_blocking_n <= (ap_ext_blocking_sub_n and ap_const_logic_1);

    ap_ext_blocking_sub_n_assign_proc : process(ap_wait_0, ap_sub_ext_blocking_0, ap_wait_1, ap_sub_ext_blocking_1, ap_wait_2, ap_sub_ext_blocking_2, ap_wait_3, ap_sub_ext_blocking_3)
    begin
        if ((((ap_wait_3 and ap_sub_ext_blocking_3) = ap_const_logic_1) and ((ap_wait_2 and ap_sub_ext_blocking_2) = ap_const_logic_1) and ((ap_wait_1 and ap_sub_ext_blocking_1) = ap_const_logic_1) and ((ap_wait_0 and ap_sub_ext_blocking_0) = ap_const_logic_1))) then 
            ap_ext_blocking_sub_n <= ap_const_logic_0;
        else 
            ap_ext_blocking_sub_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_int_blocking_n <= (ap_int_blocking_sub_n and ap_const_logic_1);

    ap_int_blocking_sub_n_assign_proc : process(ap_wait_0, ap_wait_1, ap_wait_2, ap_wait_3, ap_sub_int_blocking_0, ap_sub_int_blocking_1, ap_sub_int_blocking_2, ap_sub_int_blocking_3)
    begin
        if ((((ap_wait_3 and ap_sub_int_blocking_3) = ap_const_logic_1) and ((ap_wait_2 and ap_sub_int_blocking_2) = ap_const_logic_1) and ((ap_wait_1 and ap_sub_int_blocking_1) = ap_const_logic_1) and ((ap_wait_0 and ap_sub_int_blocking_0) = ap_const_logic_1))) then 
            ap_int_blocking_sub_n <= ap_const_logic_0;
        else 
            ap_int_blocking_sub_n <= ap_const_logic_1;
        end if; 
    end process;

    ap_local_block <= ap_const_logic_0;
    ap_local_deadlock <= ap_const_lv1_0;

    ap_ready_assign_proc : process(ap_CS_fsm_state16, regslice_both_out_r_U_apdone_blk)
    begin
        if (((regslice_both_out_r_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_root_numv_0_load_1_assign_proc : process(root_numv_0, ap_CS_fsm_state2, tmp_nbreadreq_fu_230_p5, add_ln712_fu_408_p2, trunc_ln712_fu_380_p1)
    begin
        if (((trunc_ln712_fu_380_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1))) then 
            ap_sig_allocacmp_root_numv_0_load_1 <= add_ln712_fu_408_p2;
        else 
            ap_sig_allocacmp_root_numv_0_load_1 <= root_numv_0;
        end if; 
    end process;


    ap_sig_allocacmp_root_numv_1_load_1_assign_proc : process(root_numv_1, ap_CS_fsm_state2, tmp_nbreadreq_fu_230_p5, add_ln712_fu_408_p2, trunc_ln712_fu_380_p1)
    begin
        if (((trunc_ln712_fu_380_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1))) then 
            ap_sig_allocacmp_root_numv_1_load_1 <= add_ln712_fu_408_p2;
        else 
            ap_sig_allocacmp_root_numv_1_load_1 <= root_numv_1;
        end if; 
    end process;


    ap_sig_allocacmp_root_numv_2_load_1_assign_proc : process(root_numv_2, ap_CS_fsm_state2, tmp_nbreadreq_fu_230_p5, add_ln712_fu_408_p2, trunc_ln712_fu_380_p1)
    begin
        if ((not((trunc_ln712_fu_380_p1 = ap_const_lv2_1)) and not((trunc_ln712_fu_380_p1 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1))) then 
            ap_sig_allocacmp_root_numv_2_load_1 <= add_ln712_fu_408_p2;
        else 
            ap_sig_allocacmp_root_numv_2_load_1 <= root_numv_2;
        end if; 
    end process;

    ap_str_blocking_cur_n <= (ids_TDATA_blk_n and X_TDATA_blk_n);
    ap_str_blocking_n <= (ap_str_blocking_sub_n and ap_str_blocking_cur_n);

    ap_str_blocking_sub_n_assign_proc : process(ap_wait_0, ap_wait_1, ap_wait_2, ap_wait_3, ap_sub_str_blocking_0, ap_sub_str_blocking_1, ap_sub_str_blocking_2, ap_sub_str_blocking_3)
    begin
        if ((((ap_wait_3 and ap_sub_str_blocking_3) = ap_const_logic_1) and ((ap_wait_2 and ap_sub_str_blocking_2) = ap_const_logic_1) and ((ap_wait_1 and ap_sub_str_blocking_1) = ap_const_logic_1) and ((ap_wait_0 and ap_sub_str_blocking_0) = ap_const_logic_1))) then 
            ap_str_blocking_sub_n <= ap_const_logic_0;
        else 
            ap_str_blocking_sub_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sub_ext_blocking_0_assign_proc : process(grp_top_Pipeline_Loop_children_fu_295_ap_ext_blocking_n)
    begin
        if ((grp_top_Pipeline_Loop_children_fu_295_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_0 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_ext_blocking_1_assign_proc : process(grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_ext_blocking_n)
    begin
        if ((grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_1 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_ext_blocking_2_assign_proc : process(grp_subT1_pipl_fu_312_ap_ext_blocking_n)
    begin
        if ((grp_subT1_pipl_fu_312_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_2 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_ext_blocking_3_assign_proc : process(grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_ext_blocking_n)
    begin
        if ((grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_3 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_0_assign_proc : process(grp_top_Pipeline_Loop_children_fu_295_ap_int_blocking_n)
    begin
        if ((grp_top_Pipeline_Loop_children_fu_295_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_0 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_1_assign_proc : process(grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_int_blocking_n)
    begin
        if ((grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_1 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_2_assign_proc : process(grp_subT1_pipl_fu_312_ap_int_blocking_n)
    begin
        if ((grp_subT1_pipl_fu_312_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_2 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_3_assign_proc : process(grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_int_blocking_n)
    begin
        if ((grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_3 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_0_assign_proc : process(grp_top_Pipeline_Loop_children_fu_295_ap_str_blocking_n)
    begin
        if ((grp_top_Pipeline_Loop_children_fu_295_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_0 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_1_assign_proc : process(grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_str_blocking_n)
    begin
        if ((grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_1 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_2_assign_proc : process(grp_subT1_pipl_fu_312_ap_str_blocking_n)
    begin
        if ((grp_subT1_pipl_fu_312_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_2 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_3_assign_proc : process(grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_str_blocking_n)
    begin
        if ((grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_3 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_0_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state3 = ap_CS_fsm)) then 
            ap_wait_0 <= ap_const_logic_1;
        else 
            ap_wait_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_1_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state6 = ap_CS_fsm)) then 
            ap_wait_1 <= ap_const_logic_1;
        else 
            ap_wait_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_2_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state9 = ap_CS_fsm)) then 
            ap_wait_2 <= ap_const_logic_1;
        else 
            ap_wait_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_3_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state15 = ap_CS_fsm)) then 
            ap_wait_3 <= ap_const_logic_1;
        else 
            ap_wait_3 <= ap_const_logic_0;
        end if; 
    end process;

    event_done <= ap_done;

    grp_subT1_pipl_fu_312_IDRpipe1_dout_assign_proc : process(IDRpipe1_dout, ap_CS_fsm_state9, IDRpipe2_dout, ap_CS_fsm_state11, IDRpipe3_dout, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_subT1_pipl_fu_312_IDRpipe1_dout <= IDRpipe3_dout;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_subT1_pipl_fu_312_IDRpipe1_dout <= IDRpipe2_dout;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_subT1_pipl_fu_312_IDRpipe1_dout <= IDRpipe1_dout;
        else 
            grp_subT1_pipl_fu_312_IDRpipe1_dout <= IDRpipe3_dout;
        end if; 
    end process;


    grp_subT1_pipl_fu_312_IDRpipe1_empty_n_assign_proc : process(IDRpipe1_empty_n, ap_CS_fsm_state9, IDRpipe2_empty_n, ap_CS_fsm_state11, IDRpipe3_empty_n, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_subT1_pipl_fu_312_IDRpipe1_empty_n <= IDRpipe3_empty_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_subT1_pipl_fu_312_IDRpipe1_empty_n <= IDRpipe2_empty_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_subT1_pipl_fu_312_IDRpipe1_empty_n <= IDRpipe1_empty_n;
        else 
            grp_subT1_pipl_fu_312_IDRpipe1_empty_n <= IDRpipe3_empty_n;
        end if; 
    end process;


    grp_subT1_pipl_fu_312_OutTuppipe1_full_n_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, OutTuppipe1_full_n, OutTuppipe2_full_n, OutTuppipe3_full_n)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_subT1_pipl_fu_312_OutTuppipe1_full_n <= OutTuppipe3_full_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_subT1_pipl_fu_312_OutTuppipe1_full_n <= OutTuppipe2_full_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_subT1_pipl_fu_312_OutTuppipe1_full_n <= OutTuppipe1_full_n;
        else 
            grp_subT1_pipl_fu_312_OutTuppipe1_full_n <= OutTuppipe3_full_n;
        end if; 
    end process;


    grp_subT1_pipl_fu_312_Wsigpipe1161_dout_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, Wsigpipe1_dout, Wsigpipe2_dout, Wsigpipe3_dout)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_subT1_pipl_fu_312_Wsigpipe1161_dout <= Wsigpipe3_dout;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_subT1_pipl_fu_312_Wsigpipe1161_dout <= Wsigpipe2_dout;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_subT1_pipl_fu_312_Wsigpipe1161_dout <= Wsigpipe1_dout;
        else 
            grp_subT1_pipl_fu_312_Wsigpipe1161_dout <= Wsigpipe3_dout;
        end if; 
    end process;


    grp_subT1_pipl_fu_312_Wsigpipe1161_empty_n_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, Wsigpipe1_empty_n, Wsigpipe2_empty_n, Wsigpipe3_empty_n)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_subT1_pipl_fu_312_Wsigpipe1161_empty_n <= Wsigpipe3_empty_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_subT1_pipl_fu_312_Wsigpipe1161_empty_n <= Wsigpipe2_empty_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_subT1_pipl_fu_312_Wsigpipe1161_empty_n <= Wsigpipe1_empty_n;
        else 
            grp_subT1_pipl_fu_312_Wsigpipe1161_empty_n <= Wsigpipe3_empty_n;
        end if; 
    end process;

    grp_subT1_pipl_fu_312_ap_start <= grp_subT1_pipl_fu_312_ap_start_reg;
    grp_top_Pipeline_Loop_children_fu_295_ap_start <= grp_top_Pipeline_Loop_children_fu_295_ap_start_reg;
    grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_start <= grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_ap_start_reg;
    grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_start <= grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_ap_start_reg;
    grp_top_Pipeline_VITIS_LOOP_199_1_fu_351_out_r_TREADY <= (out_r_TREADY_int_regslice and ap_CS_fsm_state15);

    ids_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state2, tmp_nbreadreq_fu_230_p5, ids_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1))) then 
            ids_TDATA_blk_n <= ids_TVALID_int_regslice;
        else 
            ids_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ids_TREADY <= regslice_both_ids_V_data_V_U_ack_in;

    ids_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_state2, tmp_nbreadreq_fu_230_p5, X_TVALID_int_regslice, ids_TVALID_int_regslice)
    begin
        if ((not((((ids_TVALID_int_regslice = ap_const_logic_0) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1)) or ((ap_const_logic_0 = X_TVALID_int_regslice) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_nbreadreq_fu_230_p5 = ap_const_lv1_1))) then 
            ids_TREADY_int_regslice <= ap_const_logic_1;
        else 
            ids_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem0_ARADDR <= ap_const_lv64_0;
    m_axi_gmem0_ARBURST <= ap_const_lv2_0;
    m_axi_gmem0_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem0_ARID <= ap_const_lv1_0;
    m_axi_gmem0_ARLEN <= ap_const_lv8_0;
    m_axi_gmem0_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem0_ARPROT <= ap_const_lv3_0;
    m_axi_gmem0_ARQOS <= ap_const_lv4_0;
    m_axi_gmem0_ARREGION <= ap_const_lv4_0;
    m_axi_gmem0_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem0_ARUSER <= ap_const_lv1_0;
    m_axi_gmem0_ARVALID <= ap_const_logic_0;
    m_axi_gmem0_AWADDR <= ap_const_lv64_0;
    m_axi_gmem0_AWBURST <= ap_const_lv2_0;
    m_axi_gmem0_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem0_AWID <= ap_const_lv1_0;
    m_axi_gmem0_AWLEN <= ap_const_lv8_0;
    m_axi_gmem0_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem0_AWPROT <= ap_const_lv3_0;
    m_axi_gmem0_AWQOS <= ap_const_lv4_0;
    m_axi_gmem0_AWREGION <= ap_const_lv4_0;
    m_axi_gmem0_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem0_AWUSER <= ap_const_lv1_0;
    m_axi_gmem0_AWVALID <= ap_const_logic_0;
    m_axi_gmem0_BREADY <= ap_const_logic_0;
    m_axi_gmem0_RREADY <= ap_const_logic_0;
    m_axi_gmem0_WDATA <= ap_const_lv256_lc_2;
    m_axi_gmem0_WID <= ap_const_lv1_0;
    m_axi_gmem0_WLAST <= ap_const_logic_0;
    m_axi_gmem0_WSTRB <= ap_const_lv32_0;
    m_axi_gmem0_WUSER <= ap_const_lv1_0;
    m_axi_gmem0_WVALID <= ap_const_logic_0;
    out_r_TVALID <= regslice_both_out_r_U_vld_out;

    stall_done_ext_assign_proc : process(ap_ext_blocking_n, ap_ext_blocking_n_reg)
    begin
        if (((ap_ext_blocking_n_reg = ap_const_logic_0) and (ap_ext_blocking_n = ap_const_logic_1))) then 
            stall_done_ext <= ap_const_logic_1;
        else 
            stall_done_ext <= ap_const_logic_0;
        end if; 
    end process;


    stall_done_int_assign_proc : process(ap_int_blocking_n, ap_int_blocking_n_reg)
    begin
        if (((ap_int_blocking_n_reg = ap_const_logic_0) and (ap_int_blocking_n = ap_const_logic_1))) then 
            stall_done_int <= ap_const_logic_1;
        else 
            stall_done_int <= ap_const_logic_0;
        end if; 
    end process;


    stall_done_str_assign_proc : process(ap_str_blocking_n, ap_str_blocking_n_reg)
    begin
        if (((ap_str_blocking_n_reg = ap_const_logic_0) and (ap_str_blocking_n = ap_const_logic_1))) then 
            stall_done_str <= ap_const_logic_1;
        else 
            stall_done_str <= ap_const_logic_0;
        end if; 
    end process;


    stall_start_ext_assign_proc : process(ap_ext_blocking_n, ap_ext_blocking_n_reg)
    begin
        if (((ap_ext_blocking_n_reg = ap_const_logic_1) and (ap_ext_blocking_n = ap_const_logic_0))) then 
            stall_start_ext <= ap_const_logic_1;
        else 
            stall_start_ext <= ap_const_logic_0;
        end if; 
    end process;


    stall_start_int_assign_proc : process(ap_int_blocking_n, ap_int_blocking_n_reg)
    begin
        if (((ap_int_blocking_n_reg = ap_const_logic_1) and (ap_int_blocking_n = ap_const_logic_0))) then 
            stall_start_int <= ap_const_logic_1;
        else 
            stall_start_int <= ap_const_logic_0;
        end if; 
    end process;


    stall_start_str_assign_proc : process(ap_str_blocking_n, ap_str_blocking_n_reg)
    begin
        if (((ap_str_blocking_n_reg = ap_const_logic_1) and (ap_str_blocking_n = ap_const_logic_0))) then 
            stall_start_str <= ap_const_logic_1;
        else 
            stall_start_str <= ap_const_logic_0;
        end if; 
    end process;

    tmp_nbreadreq_fu_230_p5 <= (0=>(X_TVALID_int_regslice), others=>'-');
    tmp_s_fu_396_p4 <= ids_TDATA_int_regslice(2 - 1 downto 0);
    trunc_ln712_fu_380_p1 <= ids_TDATA_int_regslice(2 - 1 downto 0);
    trunc_ln740_fu_364_p1 <= X_TDATA_int_regslice(12 - 1 downto 0);
    xbarIDRpipe_din <= ((trunc_ln740_reg_535 & ap_const_lv8_0) & tmp_data_V_reg_540);

    xbarIDRpipe_read_assign_proc : process(grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_xbarIDRpipe_read, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            xbarIDRpipe_read <= grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_xbarIDRpipe_read;
        else 
            xbarIDRpipe_read <= ap_const_logic_0;
        end if; 
    end process;


    xbarIDRpipe_write_assign_proc : process(ap_CS_fsm_state4, xbarpipe_full_n, xbarIDRpipe_full_n)
    begin
        if ((not(((xbarIDRpipe_full_n = ap_const_logic_0) or (xbarpipe_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            xbarIDRpipe_write <= ap_const_logic_1;
        else 
            xbarIDRpipe_write <= ap_const_logic_0;
        end if; 
    end process;


    xbarpipe_read_assign_proc : process(grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_xbarpipe_read, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            xbarpipe_read <= grp_top_Pipeline_VITIS_LOOP_154_1_fu_303_xbarpipe_read;
        else 
            xbarpipe_read <= ap_const_logic_0;
        end if; 
    end process;


    xbarpipe_write_assign_proc : process(ap_CS_fsm_state4, xbarpipe_full_n, xbarIDRpipe_full_n)
    begin
        if ((not(((xbarIDRpipe_full_n = ap_const_logic_0) or (xbarpipe_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            xbarpipe_write <= ap_const_logic_1;
        else 
            xbarpipe_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
