// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_top_Pipeline_VITIS_LOOP_199_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        out_r_TREADY,
        OutTuppipe1_dout,
        OutTuppipe1_empty_n,
        OutTuppipe1_read,
        OutTuppipe3_dout,
        OutTuppipe3_empty_n,
        OutTuppipe3_read,
        OutTuppipe2_dout,
        OutTuppipe2_empty_n,
        OutTuppipe2_read,
        out_r_TDATA,
        out_r_TVALID,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   out_r_TREADY;
input  [127:0] OutTuppipe1_dout;
input   OutTuppipe1_empty_n;
output   OutTuppipe1_read;
input  [127:0] OutTuppipe3_dout;
input   OutTuppipe3_empty_n;
output   OutTuppipe3_read;
input  [127:0] OutTuppipe2_dout;
input   OutTuppipe2_empty_n;
output   OutTuppipe2_read;
output  [127:0] out_r_TDATA;
output   out_r_TVALID;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_idle;
reg OutTuppipe1_read;
reg OutTuppipe3_read;
reg OutTuppipe2_read;
reg[127:0] out_r_TDATA;
reg out_r_TVALID;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
reg   [0:0] tmp_6_reg_191;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage2_subdone;
wire   [0:0] grp_nbreadreq_fu_60_p3;
wire   [0:0] grp_nbreadreq_fu_68_p3;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    OutTuppipe1_blk_n;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] tmp_5_reg_182;
reg    OutTuppipe3_blk_n;
reg   [0:0] tmp_7_reg_195;
reg    OutTuppipe2_blk_n;
reg    out_r_TDATA_blk_n;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage0;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] grp_nbreadreq_fu_52_p3;
wire   [31:0] cnt_2_fu_140_p2;
reg   [127:0] OutTuppipe2_read_reg_199;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state2_io;
reg    ap_block_pp0_stage1_11001;
wire   [31:0] cnt_6_fu_153_p2;
reg   [31:0] cnt_6_reg_204;
reg   [127:0] OutTuppipe3_read_reg_209;
reg   [0:0] tmp_9_reg_220;
reg    ap_block_pp0_stage2_11001;
reg   [0:0] tmp_s_reg_224;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
reg   [31:0] ap_phi_reg_pp0_iter0_cnt_3_reg_102;
reg   [31:0] ap_phi_mux_cnt_5_phi_fu_114_p4;
wire   [31:0] cnt_4_fu_146_p2;
wire   [31:0] ap_phi_reg_pp0_iter0_cnt_5_reg_111;
reg   [31:0] ap_phi_mux_cnt_7_phi_fu_125_p4;
reg   [31:0] ap_phi_reg_pp0_iter0_cnt_7_reg_122;
reg   [31:0] cnt_fu_48;
wire   [0:0] icmp_ln233_fu_159_p2;
wire    ap_loop_init;
reg   [31:0] ap_sig_allocacmp_cnt_1;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage2_01001;
reg    ap_block_pp0_stage0_01001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter1_stage0;
reg    ap_idle_pp0_0to0;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
reg    ap_done_pending_pp0;
reg    ap_block_pp0_stage1_subdone;
wire    ap_str_blocking_cur_n;
wire    ap_int_blocking_cur_n;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_134;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_loop_exit_ready == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage0)))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_134)) begin
        if ((grp_nbreadreq_fu_52_p3 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_cnt_3_reg_102 <= ap_sig_allocacmp_cnt_1;
        end else if ((grp_nbreadreq_fu_52_p3 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_cnt_3_reg_102 <= cnt_2_fu_140_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cnt_fu_48 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & ((icmp_ln233_fu_159_p2 == 1'd0) | ((grp_nbreadreq_fu_52_p3 == 1'd0) | ((grp_nbreadreq_fu_68_p3 == 1'd0) | (grp_nbreadreq_fu_60_p3 == 1'd0)))))) begin
        cnt_fu_48 <= ap_phi_mux_cnt_7_phi_fu_125_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_6_reg_191 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        OutTuppipe2_read_reg_199 <= OutTuppipe2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_7_reg_195 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        OutTuppipe3_read_reg_209 <= OutTuppipe3_dout;
        cnt_6_reg_204 <= cnt_6_fu_153_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_7_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter0_cnt_7_reg_122 <= ap_phi_mux_cnt_5_phi_fu_114_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_5_reg_182 <= grp_nbreadreq_fu_52_p3;
        tmp_6_reg_191 <= grp_nbreadreq_fu_60_p3;
        tmp_7_reg_195 <= grp_nbreadreq_fu_68_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_9_reg_220 <= grp_nbreadreq_fu_60_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_60_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_s_reg_224 <= grp_nbreadreq_fu_68_p3;
    end
end

always @ (*) begin
    if (((tmp_5_reg_182 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        OutTuppipe1_blk_n = OutTuppipe1_empty_n;
    end else begin
        OutTuppipe1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_5_reg_182 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        OutTuppipe1_read = 1'b1;
    end else begin
        OutTuppipe1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (tmp_6_reg_191 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        OutTuppipe2_blk_n = OutTuppipe2_empty_n;
    end else begin
        OutTuppipe2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_6_reg_191 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        OutTuppipe2_read = 1'b1;
    end else begin
        OutTuppipe2_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_7_reg_195 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        OutTuppipe3_blk_n = OutTuppipe3_empty_n;
    end else begin
        OutTuppipe3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_7_reg_195 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        OutTuppipe3_read = 1'b1;
    end else begin
        OutTuppipe3_read = 1'b0;
    end
end

always @ (*) begin
    if (((grp_nbreadreq_fu_68_p3 == 1'd1) & (grp_nbreadreq_fu_60_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_s_reg_224 == 1'd1) & (tmp_9_reg_220 == 1'd1))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_6_reg_191 == 1'd0)) begin
        ap_phi_mux_cnt_5_phi_fu_114_p4 = ap_phi_reg_pp0_iter0_cnt_3_reg_102;
    end else if ((tmp_6_reg_191 == 1'd1)) begin
        ap_phi_mux_cnt_5_phi_fu_114_p4 = cnt_4_fu_146_p2;
    end else begin
        ap_phi_mux_cnt_5_phi_fu_114_p4 = ap_phi_reg_pp0_iter0_cnt_5_reg_111;
    end
end

always @ (*) begin
    if ((tmp_7_reg_195 == 1'd1)) begin
        ap_phi_mux_cnt_7_phi_fu_125_p4 = cnt_6_reg_204;
    end else begin
        ap_phi_mux_cnt_7_phi_fu_125_p4 = ap_phi_reg_pp0_iter0_cnt_7_reg_122;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_cnt_1 = 32'd0;
    end else begin
        ap_sig_allocacmp_cnt_1 = cnt_fu_48;
    end
end

always @ (*) begin
    if (((tmp_7_reg_195 == 1'd1) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_r_TDATA = OutTuppipe3_read_reg_209;
    end else if (((1'b0 == ap_block_pp0_stage2_01001) & (tmp_6_reg_191 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        out_r_TDATA = OutTuppipe2_read_reg_199;
    end else if (((tmp_5_reg_182 == 1'd1) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_r_TDATA = OutTuppipe1_dout;
    end else begin
        out_r_TDATA = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_7_reg_195 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_5_reg_182 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage2) & (tmp_6_reg_191 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        out_r_TDATA_blk_n = out_r_TREADY;
    end else begin
        out_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((tmp_7_reg_195 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_5_reg_182 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (tmp_6_reg_191 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        out_r_TVALID = 1'b1;
    end else begin
        out_r_TVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((tmp_7_reg_195 == 1'd1) & (out_r_TREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state4_io) | ((tmp_7_reg_195 == 1'd1) & (out_r_TREADY == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state4_io) | ((tmp_7_reg_195 == 1'd1) & (out_r_TREADY == 1'b0))));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((tmp_7_reg_195 == 1'd1) & (1'b0 == OutTuppipe3_empty_n)) | ((tmp_5_reg_182 == 1'd1) & (out_r_TREADY == 1'b0)) | ((tmp_5_reg_182 == 1'd1) & (1'b0 == OutTuppipe1_empty_n)) | ((tmp_6_reg_191 == 1'd1) & (1'b0 == OutTuppipe2_empty_n))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state2_io) | ((tmp_7_reg_195 == 1'd1) & (1'b0 == OutTuppipe3_empty_n)) | ((tmp_5_reg_182 == 1'd1) & (out_r_TREADY == 1'b0)) | ((tmp_5_reg_182 == 1'd1) & (1'b0 == OutTuppipe1_empty_n)) | ((tmp_6_reg_191 == 1'd1) & (1'b0 == OutTuppipe2_empty_n))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state2_io) | ((tmp_7_reg_195 == 1'd1) & (1'b0 == OutTuppipe3_empty_n)) | ((tmp_5_reg_182 == 1'd1) & (out_r_TREADY == 1'b0)) | ((tmp_5_reg_182 == 1'd1) & (1'b0 == OutTuppipe1_empty_n)) | ((tmp_6_reg_191 == 1'd1) & (1'b0 == OutTuppipe2_empty_n))));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((tmp_6_reg_191 == 1'd1) & (out_r_TREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((tmp_6_reg_191 == 1'd1) & (out_r_TREADY == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((tmp_6_reg_191 == 1'd1) & (out_r_TREADY == 1'b0))));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_io = ((tmp_5_reg_182 == 1'd1) & (out_r_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = (((tmp_7_reg_195 == 1'd1) & (1'b0 == OutTuppipe3_empty_n)) | ((tmp_5_reg_182 == 1'd1) & (out_r_TREADY == 1'b0)) | ((tmp_5_reg_182 == 1'd1) & (1'b0 == OutTuppipe1_empty_n)) | ((tmp_6_reg_191 == 1'd1) & (1'b0 == OutTuppipe2_empty_n)));
end

always @ (*) begin
    ap_block_state3_io = ((tmp_6_reg_191 == 1'd1) & (out_r_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = ((tmp_6_reg_191 == 1'd1) & (out_r_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state4_io = ((tmp_7_reg_195 == 1'd1) & (out_r_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = ((tmp_7_reg_195 == 1'd1) & (out_r_TREADY == 1'b0));
end

always @ (*) begin
    ap_condition_134 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ext_blocking_n = (1'b1 & 1'b1);

assign ap_int_blocking_cur_n = (OutTuppipe3_blk_n & OutTuppipe2_blk_n & OutTuppipe1_blk_n);

assign ap_int_blocking_n = (ap_int_blocking_cur_n & 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign ap_phi_reg_pp0_iter0_cnt_5_reg_111 = 'bx;

assign ap_str_blocking_cur_n = out_r_TDATA_blk_n;

assign ap_str_blocking_n = (ap_str_blocking_cur_n & 1'b1);

assign cnt_2_fu_140_p2 = (ap_sig_allocacmp_cnt_1 + 32'd1);

assign cnt_4_fu_146_p2 = (ap_phi_reg_pp0_iter0_cnt_3_reg_102 + 32'd1);

assign cnt_6_fu_153_p2 = (ap_phi_mux_cnt_5_phi_fu_114_p4 + 32'd1);

assign grp_nbreadreq_fu_52_p3 = OutTuppipe1_empty_n;

assign grp_nbreadreq_fu_60_p3 = OutTuppipe2_empty_n;

assign grp_nbreadreq_fu_68_p3 = OutTuppipe3_empty_n;

assign icmp_ln233_fu_159_p2 = ((ap_phi_mux_cnt_7_phi_fu_125_p4 == 32'd16) ? 1'b1 : 1'b0);

endmodule //top_top_Pipeline_VITIS_LOOP_199_1
