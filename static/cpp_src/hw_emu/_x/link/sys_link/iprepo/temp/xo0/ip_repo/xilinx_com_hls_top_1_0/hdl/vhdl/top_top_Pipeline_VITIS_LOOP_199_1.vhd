-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top_top_Pipeline_VITIS_LOOP_199_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    out_r_TREADY : IN STD_LOGIC;
    OutTuppipe1_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    OutTuppipe1_empty_n : IN STD_LOGIC;
    OutTuppipe1_read : OUT STD_LOGIC;
    OutTuppipe3_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    OutTuppipe3_empty_n : IN STD_LOGIC;
    OutTuppipe3_read : OUT STD_LOGIC;
    OutTuppipe2_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    OutTuppipe2_empty_n : IN STD_LOGIC;
    OutTuppipe2_read : OUT STD_LOGIC;
    out_r_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    out_r_TVALID : OUT STD_LOGIC;
    ap_ext_blocking_n : OUT STD_LOGIC;
    ap_str_blocking_n : OUT STD_LOGIC;
    ap_int_blocking_n : OUT STD_LOGIC );
end;


architecture behav of top_top_Pipeline_VITIS_LOOP_199_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal tmp_6_reg_191 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal grp_nbreadreq_fu_60_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nbreadreq_fu_68_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage2 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal OutTuppipe1_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal tmp_5_reg_182 : STD_LOGIC_VECTOR (0 downto 0);
    signal OutTuppipe3_blk_n : STD_LOGIC;
    signal tmp_7_reg_195 : STD_LOGIC_VECTOR (0 downto 0);
    signal OutTuppipe2_blk_n : STD_LOGIC;
    signal out_r_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal grp_nbreadreq_fu_52_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal cnt_2_fu_140_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal OutTuppipe2_read_reg_199 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal cnt_6_fu_153_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal cnt_6_reg_204 : STD_LOGIC_VECTOR (31 downto 0);
    signal OutTuppipe3_read_reg_209 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_9_reg_220 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal tmp_s_reg_224 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_cnt_3_reg_102 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_cnt_5_phi_fu_114_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal cnt_4_fu_146_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_cnt_5_reg_111 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_cnt_7_phi_fu_125_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_cnt_7_reg_122 : STD_LOGIC_VECTOR (31 downto 0);
    signal cnt_fu_48 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln233_fu_159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_cnt_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_done_pending_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_str_blocking_cur_n : STD_LOGIC;
    signal ap_int_blocking_cur_n : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_134 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component top_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component top_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage2,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_loop_exit_ready = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_idle_pp0_0to0 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_cnt_3_reg_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_134)) then
                if ((grp_nbreadreq_fu_52_p3 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter0_cnt_3_reg_102 <= ap_sig_allocacmp_cnt_1;
                elsif ((grp_nbreadreq_fu_52_p3 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter0_cnt_3_reg_102 <= cnt_2_fu_140_p2;
                end if;
            end if; 
        end if;
    end process;

    cnt_fu_48_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                cnt_fu_48 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and ((icmp_ln233_fu_159_p2 = ap_const_lv1_0) or ((grp_nbreadreq_fu_52_p3 = ap_const_lv1_0) or ((grp_nbreadreq_fu_68_p3 = ap_const_lv1_0) or (grp_nbreadreq_fu_60_p3 = ap_const_lv1_0)))))) then 
                cnt_fu_48 <= ap_phi_mux_cnt_7_phi_fu_125_p4;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_6_reg_191 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                OutTuppipe2_read_reg_199 <= OutTuppipe2_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_7_reg_195 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                OutTuppipe3_read_reg_209 <= OutTuppipe3_dout;
                cnt_6_reg_204 <= cnt_6_fu_153_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_7_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                ap_phi_reg_pp0_iter0_cnt_7_reg_122 <= ap_phi_mux_cnt_5_phi_fu_114_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_5_reg_182 <= grp_nbreadreq_fu_52_p3;
                tmp_6_reg_191 <= grp_nbreadreq_fu_60_p3;
                tmp_7_reg_195 <= grp_nbreadreq_fu_68_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_9_reg_220 <= grp_nbreadreq_fu_60_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_60_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_s_reg_224 <= grp_nbreadreq_fu_68_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage2_subdone, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter1_stage0, ap_idle_pp0_0to0, ap_idle_pp0_1to1, ap_done_pending_pp0, ap_block_pp0_stage1_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_idle_pp0_0to0 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_start_int = ap_const_logic_0) and (ap_done_pending_pp0 = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;

    OutTuppipe1_blk_n_assign_proc : process(ap_enable_reg_pp0_iter0, OutTuppipe1_empty_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, tmp_5_reg_182)
    begin
        if (((tmp_5_reg_182 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            OutTuppipe1_blk_n <= OutTuppipe1_empty_n;
        else 
            OutTuppipe1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    OutTuppipe1_read_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, tmp_5_reg_182, ap_block_pp0_stage1_11001)
    begin
        if (((tmp_5_reg_182 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            OutTuppipe1_read <= ap_const_logic_1;
        else 
            OutTuppipe1_read <= ap_const_logic_0;
        end if; 
    end process;


    OutTuppipe2_blk_n_assign_proc : process(ap_enable_reg_pp0_iter0, tmp_6_reg_191, OutTuppipe2_empty_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_6_reg_191 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            OutTuppipe2_blk_n <= OutTuppipe2_empty_n;
        else 
            OutTuppipe2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    OutTuppipe2_read_assign_proc : process(ap_enable_reg_pp0_iter0, tmp_6_reg_191, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_6_reg_191 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            OutTuppipe2_read <= ap_const_logic_1;
        else 
            OutTuppipe2_read <= ap_const_logic_0;
        end if; 
    end process;


    OutTuppipe3_blk_n_assign_proc : process(ap_enable_reg_pp0_iter0, OutTuppipe3_empty_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, tmp_7_reg_195)
    begin
        if (((tmp_7_reg_195 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            OutTuppipe3_blk_n <= OutTuppipe3_empty_n;
        else 
            OutTuppipe3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    OutTuppipe3_read_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, tmp_7_reg_195, ap_block_pp0_stage1_11001)
    begin
        if (((tmp_7_reg_195 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            OutTuppipe3_read <= ap_const_logic_1;
        else 
            OutTuppipe3_read <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, out_r_TREADY, tmp_7_reg_195)
    begin
                ap_block_pp0_stage0_01001 <= ((tmp_7_reg_195 = ap_const_lv1_1) and (out_r_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, out_r_TREADY, tmp_7_reg_195, ap_block_state4_io)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state4_io) or ((tmp_7_reg_195 = ap_const_lv1_1) and (out_r_TREADY = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, out_r_TREADY, tmp_7_reg_195, ap_block_state4_io)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state4_io) or ((tmp_7_reg_195 = ap_const_lv1_1) and (out_r_TREADY = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(ap_enable_reg_pp0_iter0, out_r_TREADY, tmp_6_reg_191, OutTuppipe1_empty_n, OutTuppipe3_empty_n, OutTuppipe2_empty_n, tmp_5_reg_182, tmp_7_reg_195)
    begin
                ap_block_pp0_stage1_01001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((tmp_7_reg_195 = ap_const_lv1_1) and (ap_const_logic_0 = OutTuppipe3_empty_n)) or ((tmp_5_reg_182 = ap_const_lv1_1) and (out_r_TREADY = ap_const_logic_0)) or ((tmp_5_reg_182 = ap_const_lv1_1) and (ap_const_logic_0 = OutTuppipe1_empty_n)) or ((tmp_6_reg_191 = ap_const_lv1_1) and (ap_const_logic_0 = OutTuppipe2_empty_n))));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, out_r_TREADY, tmp_6_reg_191, OutTuppipe1_empty_n, OutTuppipe3_empty_n, OutTuppipe2_empty_n, tmp_5_reg_182, tmp_7_reg_195, ap_block_state2_io)
    begin
                ap_block_pp0_stage1_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state2_io) or ((tmp_7_reg_195 = ap_const_lv1_1) and (ap_const_logic_0 = OutTuppipe3_empty_n)) or ((tmp_5_reg_182 = ap_const_lv1_1) and (out_r_TREADY = ap_const_logic_0)) or ((tmp_5_reg_182 = ap_const_lv1_1) and (ap_const_logic_0 = OutTuppipe1_empty_n)) or ((tmp_6_reg_191 = ap_const_lv1_1) and (ap_const_logic_0 = OutTuppipe2_empty_n))));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, out_r_TREADY, tmp_6_reg_191, OutTuppipe1_empty_n, OutTuppipe3_empty_n, OutTuppipe2_empty_n, tmp_5_reg_182, tmp_7_reg_195, ap_block_state2_io)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state2_io) or ((tmp_7_reg_195 = ap_const_lv1_1) and (ap_const_logic_0 = OutTuppipe3_empty_n)) or ((tmp_5_reg_182 = ap_const_lv1_1) and (out_r_TREADY = ap_const_logic_0)) or ((tmp_5_reg_182 = ap_const_lv1_1) and (ap_const_logic_0 = OutTuppipe1_empty_n)) or ((tmp_6_reg_191 = ap_const_lv1_1) and (ap_const_logic_0 = OutTuppipe2_empty_n))));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_01001_assign_proc : process(ap_enable_reg_pp0_iter0, out_r_TREADY, tmp_6_reg_191)
    begin
                ap_block_pp0_stage2_01001 <= ((tmp_6_reg_191 = ap_const_lv1_1) and (out_r_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, out_r_TREADY, tmp_6_reg_191, ap_block_state3_io)
    begin
                ap_block_pp0_stage2_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or ((tmp_6_reg_191 = ap_const_lv1_1) and (out_r_TREADY = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, out_r_TREADY, tmp_6_reg_191, ap_block_state3_io)
    begin
                ap_block_pp0_stage2_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or ((tmp_6_reg_191 = ap_const_lv1_1) and (out_r_TREADY = ap_const_logic_0))));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_io_assign_proc : process(out_r_TREADY, tmp_5_reg_182)
    begin
                ap_block_state2_io <= ((tmp_5_reg_182 = ap_const_lv1_1) and (out_r_TREADY = ap_const_logic_0));
    end process;


    ap_block_state2_pp0_stage1_iter0_assign_proc : process(out_r_TREADY, tmp_6_reg_191, OutTuppipe1_empty_n, OutTuppipe3_empty_n, OutTuppipe2_empty_n, tmp_5_reg_182, tmp_7_reg_195)
    begin
                ap_block_state2_pp0_stage1_iter0 <= (((tmp_7_reg_195 = ap_const_lv1_1) and (ap_const_logic_0 = OutTuppipe3_empty_n)) or ((tmp_5_reg_182 = ap_const_lv1_1) and (out_r_TREADY = ap_const_logic_0)) or ((tmp_5_reg_182 = ap_const_lv1_1) and (ap_const_logic_0 = OutTuppipe1_empty_n)) or ((tmp_6_reg_191 = ap_const_lv1_1) and (ap_const_logic_0 = OutTuppipe2_empty_n)));
    end process;


    ap_block_state3_io_assign_proc : process(out_r_TREADY, tmp_6_reg_191)
    begin
                ap_block_state3_io <= ((tmp_6_reg_191 = ap_const_lv1_1) and (out_r_TREADY = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage2_iter0_assign_proc : process(out_r_TREADY, tmp_6_reg_191)
    begin
                ap_block_state3_pp0_stage2_iter0 <= ((tmp_6_reg_191 = ap_const_lv1_1) and (out_r_TREADY = ap_const_logic_0));
    end process;


    ap_block_state4_io_assign_proc : process(out_r_TREADY, tmp_7_reg_195)
    begin
                ap_block_state4_io <= ((tmp_7_reg_195 = ap_const_lv1_1) and (out_r_TREADY = ap_const_logic_0));
    end process;


    ap_block_state4_pp0_stage0_iter1_assign_proc : process(out_r_TREADY, tmp_7_reg_195)
    begin
                ap_block_state4_pp0_stage0_iter1 <= ((tmp_7_reg_195 = ap_const_lv1_1) and (out_r_TREADY = ap_const_logic_0));
    end process;


    ap_condition_134_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_134 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_exit_pp0_iter0_stage2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone, grp_nbreadreq_fu_60_p3, grp_nbreadreq_fu_68_p3)
    begin
        if (((grp_nbreadreq_fu_68_p3 = ap_const_lv1_1) and (grp_nbreadreq_fu_60_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_condition_exit_pp0_iter0_stage2 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_9_reg_220, tmp_s_reg_224, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_s_reg_224 = ap_const_lv1_1) and (tmp_9_reg_220 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_done_pending_pp0_assign_proc : process(ap_loop_exit_ready, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (not(((ap_loop_exit_ready = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_0)))) then 
            ap_done_pending_pp0 <= ap_const_logic_1;
        else 
            ap_done_pending_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;

    ap_ext_blocking_n <= (ap_const_logic_1 and ap_const_logic_1);

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_int_blocking_cur_n <= (OutTuppipe3_blk_n and OutTuppipe2_blk_n and OutTuppipe1_blk_n);
    ap_int_blocking_n <= (ap_int_blocking_cur_n and ap_const_logic_1);
    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage2;

    ap_phi_mux_cnt_5_phi_fu_114_p4_assign_proc : process(tmp_6_reg_191, ap_phi_reg_pp0_iter0_cnt_3_reg_102, cnt_4_fu_146_p2, ap_phi_reg_pp0_iter0_cnt_5_reg_111)
    begin
        if ((tmp_6_reg_191 = ap_const_lv1_0)) then 
            ap_phi_mux_cnt_5_phi_fu_114_p4 <= ap_phi_reg_pp0_iter0_cnt_3_reg_102;
        elsif ((tmp_6_reg_191 = ap_const_lv1_1)) then 
            ap_phi_mux_cnt_5_phi_fu_114_p4 <= cnt_4_fu_146_p2;
        else 
            ap_phi_mux_cnt_5_phi_fu_114_p4 <= ap_phi_reg_pp0_iter0_cnt_5_reg_111;
        end if; 
    end process;


    ap_phi_mux_cnt_7_phi_fu_125_p4_assign_proc : process(tmp_7_reg_195, cnt_6_reg_204, ap_phi_reg_pp0_iter0_cnt_7_reg_122)
    begin
        if ((tmp_7_reg_195 = ap_const_lv1_1)) then 
            ap_phi_mux_cnt_7_phi_fu_125_p4 <= cnt_6_reg_204;
        else 
            ap_phi_mux_cnt_7_phi_fu_125_p4 <= ap_phi_reg_pp0_iter0_cnt_7_reg_122;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_cnt_5_reg_111 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_cnt_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, cnt_fu_48, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_cnt_1 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_cnt_1 <= cnt_fu_48;
        end if; 
    end process;

    ap_str_blocking_cur_n <= (out_r_TDATA_blk_n);
    ap_str_blocking_n <= (ap_str_blocking_cur_n and ap_const_logic_1);
    cnt_2_fu_140_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_cnt_1) + unsigned(ap_const_lv32_1));
    cnt_4_fu_146_p2 <= std_logic_vector(unsigned(ap_phi_reg_pp0_iter0_cnt_3_reg_102) + unsigned(ap_const_lv32_1));
    cnt_6_fu_153_p2 <= std_logic_vector(unsigned(ap_phi_mux_cnt_5_phi_fu_114_p4) + unsigned(ap_const_lv32_1));
    grp_nbreadreq_fu_52_p3 <= (0=>(OutTuppipe1_empty_n), others=>'-');
    grp_nbreadreq_fu_60_p3 <= (0=>(OutTuppipe2_empty_n), others=>'-');
    grp_nbreadreq_fu_68_p3 <= (0=>(OutTuppipe3_empty_n), others=>'-');
    icmp_ln233_fu_159_p2 <= "1" when (ap_phi_mux_cnt_7_phi_fu_125_p4 = ap_const_lv32_10) else "0";

    out_r_TDATA_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, tmp_6_reg_191, OutTuppipe1_dout, ap_CS_fsm_pp0_stage1, tmp_5_reg_182, tmp_7_reg_195, OutTuppipe2_read_reg_199, OutTuppipe3_read_reg_209, ap_block_pp0_stage1_01001, ap_block_pp0_stage2_01001, ap_block_pp0_stage0_01001)
    begin
        if (((tmp_7_reg_195 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_r_TDATA <= OutTuppipe3_read_reg_209;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (tmp_6_reg_191 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_r_TDATA <= OutTuppipe2_read_reg_199;
        elsif (((tmp_5_reg_182 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_r_TDATA <= OutTuppipe1_dout;
        else 
            out_r_TDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_r_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, out_r_TREADY, tmp_6_reg_191, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, tmp_5_reg_182, tmp_7_reg_195, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if ((((tmp_7_reg_195 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_5_reg_182 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_6_reg_191 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            out_r_TDATA_blk_n <= out_r_TREADY;
        else 
            out_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_r_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, tmp_6_reg_191, ap_CS_fsm_pp0_stage1, tmp_5_reg_182, tmp_7_reg_195, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((tmp_7_reg_195 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_5_reg_182 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (tmp_6_reg_191 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            out_r_TVALID <= ap_const_logic_1;
        else 
            out_r_TVALID <= ap_const_logic_0;
        end if; 
    end process;

end behav;
